{"version":3,"sources":["/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.html","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.scss","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.module.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.routes.ts"],"names":[],"mappings":"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","file":"list.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"text-center\\\" *ngIf=\\\"!(orders && orders.length)\\\">No Order Found.</div>\\n<div *ngIf=\\\"orders && orders.length\\\" class=\\\"order-list-container\\\">\\n    <!-- <div *ngIf=\\\"orders && orders.length\\\"> -->\\n    <div class=\\\"card order-list\\\" *ngFor=\\\"let order of orders\\\">\\n        <div class=\\\"card-body\\\" [class.opacity]=\\\"order.status == 3\\\" [class.disabled]=\\\"order.status == 1 || order.status == 3\\\">\\n            <h4 class=\\\"card-title\\\">\\n                <div>\\n                    <img src=\\\"assets/images/table.png\\\" alt=\\\"\\\">\\n                    <span>{{order.tableName}}</span>\\n                </div>\\n                <div class=\\\"status\\\" [class.bg-red]=\\\"order.status == 0\\\" [class.bg-green]=\\\"order.status == 2\\\" [class.bg-yellow]=\\\"order.status == 4\\\">{{getOrderStatus(order.status)}}</div>\\n            </h4>\\n            <div class=\\\"card-text\\\">\\n                <p>\\n                    <i class=\\\"fas fa-cube\\\"></i> {{order.room.name}}</p>\\n                <p>\\n                    <i class=\\\"far fa-clock\\\"></i>\\n                    <span>{{order.created_at | date:'hh:mm a'}}</span>\\n                </p>\\n                <p>\\n                    <i class=\\\"far fa-user\\\"></i> {{order.noOfPeople}}</p>\\n            </div>\\n            <div class=\\\"step-listing\\\">\\n                <ul *ngIf=\\\"stepdata[order._id]\\\">\\n                    <li *ngFor=\\\"let step of order.step; let i = index;\\\" (click)=\\\"selectedTab(step.step,i,order._id)\\\" [class.active]=\\\"step.step == stepdata[order._id].step\\\" [class.completed]=\\\"step.status == 1\\\">{{step.step}}</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"order-items-container\\\">\\n                <div *ngFor=\\\"let item of order.item\\\">\\n                    <div class=\\\"order-item\\\" *ngIf=\\\"stepdata[order._id] && item.step == stepdata[order._id].step\\\">\\n                        <label class=\\\"label item-status\\\">{{getOrderStatus(item.status)}}</label>\\n                        <div class=\\\"order-item-img\\\">\\n                            {{item.quantity}} X\\n                        </div>\\n                        <div class=\\\"order-item-detail\\\">\\n                            {{item.id.name}}\\n                            <ul>\\n                                <li *ngFor=\\\"let varient of item.variant\\\">\\n                                    <i *ngIf=\\\"varient.status == 1\\\">+</i>\\n                                    <i *ngIf=\\\"varient.status == 0\\\">-</i> {{varient.name}}\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"order-quantity d-flex\\\">\\n                            <!-- <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" (click)=\\\"updateItem(item, order._id, 1)\\\">\\n                                <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" (click)=\\\"updateItem(item, order._id, 3)\\\">\\n                                <i class=\\\"fas fa-times\\\"></i>\\n                            </button> -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"btn-container d-flex justify-content-between\\\">\\n                    <button class=\\\"btn btn-primary waves-light\\\" mdbRippleRadius (click)=\\\"updateOrder(order, 3)\\\">Cancel</button>\\n                    <button class=\\\"btn btn-primary waves-light\\\" mdbRippleRadius (click)=\\\"updateOrder(order, 1)\\\">Delivered</button>\\n                </div> -->\\n        </div>\\n        <div class=\\\"order-call-btn\\\">\\n            <button *ngIf=\\\"stepdata[order._id] && stepdata[order._id].step != 'Uscita 1' \\\" type=\\\"submit\\\" (click)=\\\"changeStep(order, stepdata[order._id].step)\\\">Call ({{times[order._id][stepdata[order._id].step]}}:00)</button>\\n        </div>\\n    </div>\\n    <!-- </div> -->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.html\n// module id = ../../../../../src/app/hirundo/waiter/list/list.component.html\n// module chunks = list.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.scss\n// module id = ../../../../../src/app/hirundo/waiter/list/list.component.scss\n// module chunks = list.module","import { Component, OnInit, IterableDiffers, Input, DoCheck } from '@angular/core';\nimport { WebsocketService } from '../../../service/websocket.service';\nimport { Router } from '@angular/router';\nimport { GlobalService } from '../../global.service'\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/Rx';\nimport *  as _ from 'lodash';\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements DoCheck {\n    @Input() orders: Array<any> = [];\n    differ: any;\n    // public orders: Array<any> = [];\n    public loadingOrders: boolean = true;\n    public steps: Array<any> = [];\n    public activetab: boolean[] = [];\n    public stepdata: Array<any> = [];\n    public orderId: Array<any> = [];\n    public times: Array<any> = [];      \n    constructor(public websocketService: WebsocketService, private globalService: GlobalService, public router: Router,private differs: IterableDiffers) {\n        this.differ = differs.find([]).create(null);\n     }\n\n    ngOnInit() {\n        this.websocketService.getWaiterOrders().then(data => {\n            this.orders = data;\n            // if (this.orders.length) {\n            //     for (let i = 0; i < this.orders.length; i++) {\n            //         this.orderId.push(this.orders[i]._id);\n            //         let step = [];\n            //         for (let j = 0; j < this.orders[i].item.length; j++) {\n            //             if (step.length) {\n            //                 for (let b = 0; b < step.length; b++) {\n            //                     if (step[b].value !== this.orders[i].item[j].step) {\n            //                         let key = this.orders[i].item[j].step.split(' ');\n            //                         let newKey = Number(key[1]);\n            //                         let value = this.orders[i].item[j].step;\n            //                         step.push({ id: newKey, value: value });\n            //                     }\n            //                 }\n            //             }\n            //             if (!step.length) {\n            //                 let key = this.orders[i].item[j].step.split(' ');\n            //                 let newKey = Number(key[1]);\n            //                 let value = this.orders[i].item[j].step;\n            //                 step.push({ id: newKey, value: value });\n            //             }\n            //         }\n            //         step.sort(function(a, b){\n            //             return a.id-b.id\n            //         });\n            //         step = _.uniqBy(step,'value');\n            //         // for (let j = 0; j < this.orders[i].item.length; j++) {\n            //         //     if (step.indexOf(this.orders[i].item[j].step) < 0) {\n            //         //         step.push(this.orders[i].item[j].step);\n            //         //     }\n            //         // }\n            //         this.steps[this.orders[i]._id] = step;\n            //         let time = {};                                                                        \n            //         for (let k = 0; k < this.steps[this.orders[i]._id].length; k++) {\n            //         let temp = [];                          \n            //             for (let l = 0; l < this.orders[i].item.length; l++) {\n            //                 if(this.orders[i].item[l].step == this.steps[this.orders[i]._id][k].value && temp.indexOf(this.orders[i].item[l].id.preparationTime) < 0){\n            //                     temp.push(this.orders[i].item[l].id.preparationTime);\n            //                 }\n            //             }\n            //             time[this.steps[this.orders[i]._id][k].value] = Math.max(...temp);                        \n            //         }\n            //         this.times[this.orders[i]._id] = time;                                            \n            //     }\n            //     if (this.orderId && this.orderId.length) {\n            //         for (let k = 0; k < this.orderId.length; k++) {\n            //             let temp = {\n            //                 tab: 0,\n            //                 step: ''\n            //             }\n            //             temp.tab = 0;\n            //             temp.step = this.steps[this.orderId[k]][0].value;\n            //             this.stepdata[this.orderId[k]] = temp;\n            //         }\n            //     }\n            // }\n            if (this.orders.length) {\n                for (let i = 0; i < this.orders.length; i++) {\n                    let time = {};\n                    for (let k = 0; k < this.orders[i].step.length; k++) {\n                        let temp = [];\n                        for (let l = 0; l < this.orders[i].item.length; l++) {\n                            if (this.orders[i].item[l].step == this.orders[i].step[k].step && temp.indexOf(this.orders[i].item[l].id.preparationTime) < 0) {\n                                temp.push(this.orders[i].item[l].id.preparationTime);\n                            }\n                        }\n                        time[this.orders[i].step[k].step] = Math.max(...temp);\n                        if(this.orders[i].step[k].status == 1){\n                            let temparray = this.orders[i].step[k].step.split(' ');\n                            let num = Number(temparray[1]);\n                            let stepTemp = temparray[0]+' '+ ++num;\n                            let temp = {\n                                tab: num,\n                                step: stepTemp,\n                            }\n                            this.stepdata[this.orders[i]._id] = temp;\n                        }else{\n                            let tempp = {\n                                tab: 0,\n                                step: ''\n                            }\n                            tempp.tab = 0;\n                            tempp.step = this.orders[i].step[0].step;\n                            this.stepdata[this.orders[i]._id] = tempp;\n                        }\n                        \n                    }\n                    this.times[this.orders[i]._id] = time;\n                }\n            }\n            this.loadingOrders = false;\n        })\n            .catch(error => {\n                console.log('error', error);\n            });\n    }\n\n    public getOrderStatus(status) {\n        var str = 'In progress';\n        switch (status) {\n            case 0:\n                str = 'New order'; break;\n            case 1:\n                str = 'Delivered'; break;\n            case 2:\n                str = 'Prepared'; break;\n            case 3:\n                str = 'Cancelled'; break;\n            case 4:\n                str = 'In progress'; break;\n            default:\n                break;\n        }\n\n        return str;\n    };\n\n    public updateOrder(order, status) {\n        order.status = status;\n        let items = [];\n        for (let i = 0; i < order.item.length; i++) {\n            items.push(order.item[i].id._id)\n        }\n        let opts = {\n            status: status,\n            itemId: items\n        };\n        this.websocketService.updateOrder(order._id, opts).then(data => {\n        }).catch(error => {\n            console.log(\"error\", error);\n        });\n    };\n\n    public updateItem(item, order, status) {\n        item.status = status;\n        let items = [];\n        items.push(item.id._id)\n        let opts = {\n            status: status,\n            itemId: items\n        };\n        this.websocketService.updateWaiterOrder(order, opts).then(data => {\n        }).catch(error => {\n            console.log(\"error\", error);\n        });\n    };\n\n\n    public changeStep(order, step) {\n        let items = [];\n        let opts = {\n            step: step\n        };\n        this.websocketService.changeOrderStep(order._id, opts).then(data => {\n        }).catch(error => {\n            console.log(\"error\", error);\n        });\n    };\n\n    selectedTab(step, tab, orderId) {\n        console.log('step',step);\n        console.log('tab',tab);\n        console.log('orderId',orderId);\n        \n        let temp = {\n            tab: tab,\n            step: step\n        }\n        this.stepdata[orderId] = temp;\n    }\n\n    ngDoCheck() {\n        const change = this.differ.diff(this.orders);\n        if(change != null){\n            if (this.orders.length) {\n                for (let i = 0; i < this.orders.length; i++) {\n                    let time = {};\n                    for (let k = 0; k < this.orders[i].step.length; k++) {\n                        let temp = [];\n                        for (let l = 0; l < this.orders[i].item.length; l++) {\n                            if (this.orders[i].item[l].step == this.orders[i].step[k].step && temp.indexOf(this.orders[i].item[l].id.preparationTime) < 0) {\n                                temp.push(this.orders[i].item[l].id.preparationTime);\n                            }\n                        }\n                        time[this.orders[i].step[k].step] = Math.max(...temp);\n                        let tempp = {\n                            tab: 0,\n                            step: ''\n                        }\n                        tempp.tab = 0;\n                        tempp.step = this.orders[i].step[0].step;\n                        this.stepdata[this.orders[i]._id] = tempp;\n                    }\n                    this.times[this.orders[i]._id] = time;\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListComponent } from './list.component';\nimport { ListRouting } from './list.routes'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListRouting\n  ],\n  declarations: [ListComponent]\n})\nexport class ListModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list.component';\n\nconst routes: Routes = [\n    { path: '', component: ListComponent }\n];\n\n\nexport const ListRouting: ModuleWithProviders = RouterModule.forChild(routes); \n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/waiter/list/list.routes.ts"],"sourceRoot":"webpack:///"}