{"version":3,"sources":["/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"names":[],"mappings":"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","file":"order-list.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"text-center\\\" *ngIf=\\\"!(orders && orders.length)\\\">No Order Found.</div>\\n<div *ngIf=\\\"orders && orders.length\\\" class=\\\"order-list-container container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 col-md-3\\\"  *ngFor=\\\"let order of orders\\\">\\n\\n            <div class=\\\"card order-list\\\">\\n        <div class=\\\"card-body\\\" [class.opacity]=\\\"order.status == 3\\\">\\n            <h4 class=\\\"card-title\\\">\\n                <div>\\n                        <img src=\\\"assets/images/table.png\\\" alt=\\\"\\\">\\n                        <span>{{order.tableName}}</span>\\n                    </div>\\n                <div class=\\\"status\\\" [class.bg-red]=\\\"order.status == 0\\\" [class.bg-green]=\\\"order.status == 2\\\" [class.bg-yellow]=\\\"order.status == 4\\\">{{getOrderStatus(order.status)}}</div>\\n            </h4>\\n            <div class=\\\"card-text\\\">\\n                <p>\\n                    <i class=\\\"fas fa-cube\\\"></i> {{order.room.name}}</p>\\n                <p>\\n                        <i class=\\\"far fa-clock\\\"></i> {{order.created_at | date:'hh:mm a'}}\\n                    \\n                </p>\\n                <p>\\n                    <i class=\\\"far fa-user\\\"></i> {{order.noOfPeople}}</p>\\n            </div>\\n            <!-- <div class=\\\"step-listing\\\">\\n                <ul *ngIf=\\\"stepdata[order._id]\\\">\\n                    <li *ngFor=\\\"let step of order.step; let i = index;\\\" (click)=\\\"selectedTab(step.step,i,order._id)\\\" [class.active]=\\\"step.step == stepdata[order._id].step\\\" [class.completed]=\\\"step.status == 1\\\">{{step.step}}</li>\\n                </ul>\\n            </div> -->\\n            <div class=\\\"order-items-container\\\">\\n                <div *ngFor=\\\"let step of order.step; let i= index\\\">\\n                    <p (click)=\\\"selectedTab(step,i,order._id)\\\" [class.active]=\\\"step.step == stepdata[order._id].step\\\" [class.completed]=\\\"step.status == 1\\\">{{step.step}}</p>\\n                    <div *ngFor=\\\"let item of step.item\\\">\\n                            <div class=\\\"order-item\\\">\\n                                <label class=\\\"label item-status\\\">{{getOrderStatus(item.status)}}</label>\\n                                <div class=\\\"order-item-img\\\">\\n                                    {{item.quantity}} X\\n                                </div>\\n                                <div class=\\\"order-item-detail\\\">\\n                                    {{item.id.name}}\\n                                    <ul>\\n                                        <li *ngFor=\\\"let varient of item.variant\\\">\\n                                            <i *ngIf=\\\"varient.status == 1\\\">+</i>\\n                                            <i *ngIf=\\\"varient.status == 0\\\">-</i> {{varient.name}}\\n                                        </li>\\n                                    </ul>\\n                                    <ul>\\n                                        <li>\\n                                            {{item.notes}}\\n                                        </li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"order-quantity d-flex w-105\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" (click)=\\\"updateItem(item, order._id, 2)\\\">\\n                                        <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\n                                    </button>\\n                                </div>\\n                            </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"order-call-btn\\\" *ngIf=\\\"order.step.length\\\">\\n            <div *ngFor=\\\"let step of order.step; let indx = index;\\\">\\n                <!-- <div *ngIf=\\\"stepdata[order._id].step == step.step\\\">\\n                    <button type=\\\"submit\\\" *ngIf=\\\"stepdata[order._id] && (order.stepStatus == stepdata[order._id].step) && (step.status != 4) && (step.status != 5) && (step.status != 1)\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 4)\\\">Start ({{times[order._id][stepdata[order._id].step]}}:00)</button>                    \\n                    <button type=\\\"submit\\\" *ngIf=\\\"step.status == 0 && (step.step == 'Uscita 1')\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 4)\\\">Start ({{times[order._id][stepdata[order._id].step]}}:00)</button>\\n                    <div class=\\\"running-label\\\" *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 4)\\\"  (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 5)\\\"><span class=\\\"running\\\">Running {{remainingTime[order._id][stepdata[order._id].step]}}</span></div>\\n                    <button *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 5)\\\" type=\\\"submit\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 1)\\\">Completed</button>\\n                    <div *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 4)\\\" id=\\\"{{step.step.replace(' ','')+order._id+indx}}\\\" [ngStyle]=\\\"{'width': barWidth[step.step.replace(' ','')+order._id+indx]}\\\" class=\\\"progress-btn\\\"  (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 5)\\\"></div>\\n                    <button class=\\\"bg-yellow\\\" *ngIf=\\\"stepdata[order._id] && (step.step != 'Uscita 1') && (step.status == 0) && (order.stepStatus != stepdata[order._id].step)\\\" type=\\\"submit\\\" [disabled]=\\\"true\\\">To Call ({{times[order._id][stepdata[order._id].step]}}:00)</button>\\n                </div> -->\\n                <div *ngIf=\\\"stepdata[order._id].step == step.step\\\">\\n                    <button type=\\\"submit\\\" *ngIf=\\\"stepdata[order._id] && (order.stepStatus == stepdata[order._id].step) && itemStatus[order._id] && itemStatus[order._id][stepdata[order._id].step]\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 4)\\\">Start ({{times[order._id][stepdata[order._id].step]}}:00)</button>                    \\n                    <button type=\\\"submit\\\" *ngIf=\\\"itemStatus[order._id] && itemStatus[order._id][stepdata[order._id].step] && (step.step == 'Uscita 1')\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 4)\\\">Start ({{times[order._id][stepdata[order._id].step]}}:00)</button>\\n                    <div class=\\\"running-label\\\" *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 4) && itemStatus[order._id] && !itemStatus[order._id][stepdata[order._id].step]\\\"  (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 5)\\\"><span class=\\\"running\\\">Running {{remainingTime[order._id][stepdata[order._id].step]}}</span></div>\\n                    <button *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 5) && itemStatus[order._id] && !itemStatus[order._id][stepdata[order._id].step]\\\" type=\\\"submit\\\" (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 1)\\\">Completed</button>\\n                    <div *ngIf=\\\"stepdata[order._id] && (step.step == stepdata[order._id].step) && (step.status == 4) && itemStatus[order._id] && !itemStatus[order._id][stepdata[order._id].step]\\\" id=\\\"{{step.step.replace(' ','')+order._id+indx}}\\\" [ngStyle]=\\\"{'width': barWidth[step.step.replace(' ','')+order._id+indx]}\\\" class=\\\"progress-btn\\\"  (click)=\\\"updateStepItem(step,indx, order, times[order._id][stepdata[order._id].step], 5)\\\"></div>\\n                    <button class=\\\"bg-yellow\\\" *ngIf=\\\"stepdata[order._id] && (step.step != 'Uscita 1') && (step.status == 0) && (order.stepStatus != stepdata[order._id].step)\\\" type=\\\"submit\\\" [disabled]=\\\"true\\\">To Call ({{times[order._id][stepdata[order._id].step]}}:00)</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.html\n// module chunks = order-list.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.scss\n// module chunks = order-list.module","import { Component, OnInit, IterableDiffers, Input, DoCheck } from '@angular/core';\nimport { OrderByPipe } from '../../orderby';\nimport { OrderListService } from './order-list.service';\nimport { WebsocketService } from '../../../service/websocket.service';\nimport { AuthGuard } from '../../../shared/guard/auth.guard';\nimport *  as _ from 'lodash';\n@Component({\n    selector: 'app-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\n\nexport class OrderListComponent implements DoCheck {\n    @Input() orders: Array<any> = [];\n    differ: any;\n    public clock: any;\n    public tick: any;\n    public loadingOrders: boolean = true;\n    public steps: Array<any> = [];\n    public activetab: boolean[] = [];\n    public stepdata: Array<any> = [];\n    public orderId: Array<any> = [];\n    public times: Array<any> = [];\n    public itemStatus: Array<any> = [];   \n    public showStartButton: Array<any> = [];         \n    public completeButton = false;\n    public remainingTime: Array<any> = [];\n    public orderStepData: {};\n    public barWidth: Array<any> = [];\n    public id;\n    constructor(public websocketService: WebsocketService, public authGuard: AuthGuard, private differs: IterableDiffers) {\n        this.differ = differs.find([]).create(null);\n    }\n\n    ngOnInit() {\n        this.websocketService.getOrders().then(data => {\n            this.orders = data;\n            if (this.orders.length) {\n                this.itemStatus = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    let time = {};\n                    let remtime = {};\n                    for (let k = 0; k < this.orders[i].step.length; k++) {\n                        let temp = [];\n                        for (let l = 0; l < this.orders[i].item.length; l++) {\n                            if (this.orders[i].item[l].step == this.orders[i].step[k].step && temp.indexOf(this.orders[i].item[l].id.preparationTime) < 0) {\n                                temp.push(this.orders[i].item[l].id.preparationTime);\n                            }\n                        }\n                        time[this.orders[i].step[k].step] = Math.max(...temp);\n                        remtime[this.orders[i].step[k].step] = '0:00';\n                        if (this.orders[i].step[k].status == 1) {\n                            let temparray = this.orders[i].step[k].step.split(' ');\n                            let num = Number(temparray[1]);\n                            let stepTemp = temparray[0] + ' ' + ++num;\n                            let temp = {\n                                tab: num,\n                                step: stepTemp,\n                            }\n                            this.stepdata[this.orders[i]._id] = temp;\n                        } else {\n                            let tempp = {\n                                tab: 0,\n                                step: ''\n                            }\n                            tempp.tab = 0;\n                            tempp.step = this.orders[i].step[0].step;\n                            this.stepdata[this.orders[i]._id] = tempp;\n                        }\n\n                    }\n                    this.times[this.orders[i]._id] = time;\n                    this.remainingTime[this.orders[i]._id] = remtime; \n                    let itemStatus = {};\n                    for (let m = 0; m < this.orders[i].step.length; m++) {\n                        let startTemp = [];\n                        for (let n = 0; n < this.orders[i].item.length; n++) {\n                            if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                startTemp.push(this.orders[i].item[n].status);\n                            }\n                        }\n                        itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                    }\n                    this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                }\n            }\n            this.loadingOrders = false;\n        })\n            .catch(error => {\n            });\n        this.tick = setInterval(() => {\n            this.clock = Date.now();\n        }, 1000);\n    }\n\n    isBelowThreshold(currentValue) {\n        return currentValue == 0;\n    };\n\n    public getOrderStatus(status) {\n        var str = 'In progress';\n        switch (status) {\n            case 0:\n                str = 'New order'; break;\n            case 1:\n                str = 'Delivered'; break;\n            case 2:\n                str = 'Prepared'; break;\n            case 3:\n                str = 'Cancelled'; break;\n            case 4:\n                str = 'In progress'; break;\n            case 5:\n                str = 'Completed'; break;\n            default:\n                break;\n        }\n        return str;\n    };\n\n    public updateOrder(order, time, status) {\n        order.status = status;\n        let items = [];\n        let ids = [];\n        for (let i = 0; i < order.item.length; i++) {\n            for (let k = 0; k < this.authGuard.getCurrentUser().category.length; k++) {\n                if (order.item[i].category == this.authGuard.getCurrentUser().category[k]) {\n                    items.push(order.item[i].id._id);\n                    ids.push(order.item[i]._id);                    \n                }\n            }\n        }\n        let opts = {\n            status: status,\n            itemId: items,\n            id: ids\n        };\n        this.websocketService.updateOrder(order._id, opts).then(data => {\n            if (this.orders.length) {\n                this.itemStatus = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    let itemStatus = {};\n                    for (let m = 0; m < this.orders[i].step.length; m++) {\n                        let startTemp = [];\n                        for (let n = 0; n < this.orders[i].item.length; n++) {\n                            if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                startTemp.push(this.orders[i].item[n].status);\n                            }\n                        }\n                        itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                    }\n                    this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                }\n            }\n        }).catch(error => {\n        });\n    };\n\n    public updateItem(item, order, status) {\n        item.status = status;\n        let items = [];\n        let ids = [];        \n        items.push(item.id._id);\n        ids.push(item._id);                            \n        let opts = {\n            status: status,\n            itemId: items,\n            step: this.stepdata[order._id].step,\n            id: ids            \n        };\n        this.websocketService.updateOrder(order, opts).then(data => {\n            if (this.orders.length) {\n                this.itemStatus = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    let itemStatus = {};\n                    for (let m = 0; m < this.orders[i].step.length; m++) {\n                        let startTemp = [];\n                        for (let n = 0; n < this.orders[i].item.length; n++) {\n                            if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                startTemp.push(this.orders[i].item[n].status);\n                            }\n                        }\n                        itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                    }\n                    this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                }\n            }\n        }).catch(error => {\n        });\n    };\n\n    public updateStepItem(step, index, order, time, status) {\n        if (localStorage.getItem('step') != null) {\n            localStorage.removeItem('step');\n        }\n        localStorage.setItem('step', JSON.stringify(step));\n        let seconds = time * 60;\n        let timeInterval = 1000;\n        let m = time - 1;\n        let w = parseFloat((100 / seconds).toFixed(2));\n        let t = 0;\n        let s = 60;\n        var width = 0;\n        step = JSON.parse(localStorage.getItem('step'));  // Clones the object                \n        this.id = setInterval(() => {\n            step = JSON.parse(localStorage.getItem('step'));  // Clones the object        \n            if (step.status != 1 && step.status != 5 && step.step == this.stepdata[order._id].step) {\n                t = t + 1;\n                seconds = seconds - 1;\n                s = s - 1;\n                if (seconds == 0 && step.status != 1 && step.step == this.stepdata[order._id].step) {\n                    clearInterval(this.id);\n                    this.remainingTime[order._id][step.step] = '0:00';\n                    let items = [];\n                    let ids = [];                    \n                    this.completeButton = true;\n                    for (let i = 0; i < order.item.length; i++) {\n                        for (let k = 0; k < this.authGuard.getCurrentUser().category.length; k++) {\n                            if (((order.item[i].department.indexOf(this.authGuard.getCurrentUser()._id)) > -1) || ((this.authGuard.getCurrentUser().category.indexOf(order.item[i].category)) > -1)) {\n                                if (order.item[i].step == this.stepdata[order._id].step) {\n                                    order.item[i].status = status;\n                                    if (items.indexOf(order.item[i].id._id) < 0) {\n                                        items.push(order.item[i].id._id);\n                                        ids.push(order.item[i]._id);                                        \n                                    }\n                                }\n                            }\n                        }\n                    }\n                    let temp = {\n                        status: 5,\n                        itemId: items,\n                        step: this.stepdata[order._id].step,\n                        id: ids\n                    };\n                    this.websocketService.updateOrder(order._id, temp).then(data => {\n                        order.status = data.data.status;\n                        for (let i = 0; i < this.orders.length; i++) {\n                            if (this.orders[i]._id == data.data._id) {\n                                this.orders[i].step = data.data.step;\n                            }\n                        }\n                        for (let i = 0; i < data.data.step.length; i++) {\n                            if (data.data.step[i].step == step.step) {\n                                step.status = data.data.step[i].status;\n                            }\n                        }\n                        if (this.orders.length) {\n                            this.itemStatus = [];\n                            for (let i = 0; i < this.orders.length; i++) {\n                                let itemStatus = {};\n                                for (let m = 0; m < this.orders[i].step.length; m++) {\n                                    let startTemp = [];\n                                    for (let n = 0; n < this.orders[i].item.length; n++) {\n                                        if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                            startTemp.push(this.orders[i].item[n].status);\n                                        }\n                                    }\n                                    itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                                }\n                                this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                            }\n                        }\n                    }).catch(error => {\n                    });\n                }\n                else {\n                    width = width + w;\n                    if (width < 100) {\n                        this.barWidth[step.step.replace(' ', '') + order._id + index] = width + '%';\n                    } else {\n                        this.barWidth[step.step.replace(' ', '') + order._id + index] = '100%';\n                    }\n                }\n                if (t == 60) {\n                    t = 0;\n                    if (m == 0) {\n                        m = 0;\n                        s = 0;\n                    } else {\n                        m = m - 1;\n                        s = 60;\n                    }\n                }\n                var minutes = m;\n                this.remainingTime[order._id][this.stepdata[order._id].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n            }\n        }, timeInterval);\n        let items = [];\n        let ids = [];                            \n        for (let i = 0; i < order.item.length; i++) {\n            for (let k = 0; k < this.authGuard.getCurrentUser().category.length; k++) {\n                if (((order.item[i].department.indexOf(this.authGuard.getCurrentUser()._id)) > -1) || ((this.authGuard.getCurrentUser().category.indexOf(order.item[i].category)) > -1)) {\n                    if (order.item[i].step == this.stepdata[order._id].step) {\n                        order.item[i].status = status;\n                        if (items.indexOf(order.item[i].id._id) < 0) {\n                            items.push(order.item[i].id._id);\n                            ids.push(order.item[i]._id);                            \n                        }\n                    }\n                }\n            }\n        }\n        let opts = {\n            status: status,\n            itemId: items,\n            step: this.stepdata[order._id].step,\n            id: ids\n        };\n        this.websocketService.updateOrder(order._id, opts).then((data) => {\n            order.status = data.data.status;\n            order.step = data.data.step;\n            if (this.orders.length) {\n                this.itemStatus = [];                                                                                                                     \n                for (let i = 0; i < this.orders.length; i++) {\n                    let itemStatus = {};\n                    for (let m = 0; m < this.orders[i].step.length; m++) {\n                        let startTemp = [];\n                        for (let n = 0; n < this.orders[i].item.length; n++) {\n                            if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                startTemp.push(this.orders[i].item[n].status);\n                            }\n                        }\n                        itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                    }\n                    this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                }\n            }\n            for (let i = 0; i < data.data.step.length; i++) {\n                if (data.data.step[i].step == step.step) {\n                    step.status = data.data.step[i].status;\n                    if (step.status == 5) {\n                        seconds = 0;\n                        timeInterval = 0;\n                        clearInterval(this.id);\n                        setTimeout(this.id.data.handleId);\n                        this.remainingTime[order._id][step.step] = '0:00';\n                    }\n                    localStorage.setItem('step',JSON.stringify(data.data.step[i]));\n                }\n            }\n            if (order.step) {\n                for (let j = 0; j < order.step.length - 1; j++) {\n                    if (order.step[j].status == 1) {\n                        let temparray = order.step[j].step.split(' ');\n                        let num = Number(temparray[1]);\n                        let stepTemp = temparray[0] + ' ' + ++num;\n                        let temp = {\n                            tab: num,\n                            step: stepTemp,\n                        }\n                        this.stepdata[order._id] = temp;\n                    }\n                }\n            }\n            if (data.data.status == 1) {\n                for (var i = 0; i < this.orders.length; i++) {\n                    if (data.data._id === this.orders[i]._id) {\n                        this.orders.splice(i, 1);\n                    }\n                }\n            }\n        }).catch(error => {\n        });\n    };\n\n    showCompleteBtn(step, index, order, time) {\n        this.completeButton = true;\n    }\n\n    selectedTab(step, tab, orderId) {\n        let temp = {\n            tab: tab,\n            step: step\n        }\n        this.stepdata[orderId] = temp;\n    }\n\n    ngDoCheck() {\n        if(this.orders && this.orders.length){\n            const change = this.differ.diff(this.orders);\n            if (change != null) {\n                if (this.orders.length) {\n                    this.itemStatus = [];\n                    for (let i = 0; i < this.orders.length; i++) {\n                        let time = {};\n                        let remtime = {};\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\n                            let temp = [];\n                            for (let l = 0; l < this.orders[i].item.length; l++) {\n                                if (this.orders[i].item[l].step == this.orders[i].step[k].step && temp.indexOf(this.orders[i].item[l].id.preparationTime) < 0) {\n                                    temp.push(this.orders[i].item[l].id.preparationTime);\n                                }\n                            }\n                            time[this.orders[i].step[k].step] = Math.max(...temp);\n                            remtime[this.orders[i].step[k].step] = '0:00';\n                            let tempp = {\n                                tab: 0,\n                                step: ''\n                            }\n                            tempp.tab = 0;\n                            tempp.step = this.orders[i].step[0].step;\n                            this.stepdata[this.orders[i]._id] = tempp;\n                        }\n                        this.times[this.orders[i]._id] = time;\n                        this.remainingTime[this.orders[i]._id] = remtime;\n                        let itemStatus = {};\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            let startTemp = [];\n                            for (let n = 0; n < this.orders[i].item.length; n++) {\n                                if (this.orders[i].item[n].step == this.orders[i].step[m].step && this.orders[i].item[n].department.indexOf(this.authGuard.getCurrentUser()._id) > -1) {\n                                    startTemp.push(this.orders[i].item[n].status);\n                                }\n                            }\n                            itemStatus[this.orders[i].step[m].step] = startTemp.every(this.isBelowThreshold);      \n                        }\n                        this.itemStatus[this.orders[i]._id] = itemStatus;                    \n                    }\n                }\n            }\n        }\n        \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrderListComponent } from './order-list.component';\nimport { OrderListRouting } from './order-list.routes';\nimport { OrderListService } from './order-list.service';\nimport { WebsocketService } from '../../../service/websocket.service';\nimport { OrderByPipe } from '../../orderby';\n@NgModule({\n  imports: [\n    CommonModule,\n    OrderListRouting\n  ],\n  declarations: [OrderListComponent, OrderByPipe],\n  providers: [\n    WebsocketService,\n    OrderListService\n  ],\n})\nexport class OrderListModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderListComponent } from './order-list.component';\n\nconst routes: Routes = [\n    { path: '', component: OrderListComponent }\n];\n\n\nexport const OrderListRouting: ModuleWithProviders = RouterModule.forChild(routes); \n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable, Subject } from 'rxjs/Rx';\n@Injectable()\nexport class OrderListService {\n  orderList = [];\n  constructor(private http: Http) { \n    let url = '/api/department/orders';\n    this.http.get(url).toPromise()\n      .then(data => {\n        let res = data.json();\n        this.orderList = res.data;\n      })\n      .catch(error => {\n        this.orderList = [];\n      });\n  }\n\n  setOrder(data) {\n    this.orderList.push(data);\n  }\n\n  public extractData(res: Response) {\n    let body = res.json();\n    if (body.hasOwnProperty('error')) {\n      if (body.error.message === 'Token is required') {\n        this.logout();\n      } else {\n        return Promise.resolve(body || {});\n      }\n    } else {\n      return Promise.resolve(body || {});\n    }\n  }\n\n  private handleErrorPromise(error: Response | any) {\n    let body = error.json();\n    if (error.status === 400 || error.status === 401) {\n      return Promise.reject(body.message || error);\n    }\n    else {\n      this.logout();\n    }\n  }\n\n  private logout() {\n    localStorage.removeItem('isLoggedin');\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    document.cookie = \"token=\" + '';\n    window.location.href = '/';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","//The pipe class implements the PipeTransform interface's transform method that accepts an input value and an optional array of parameters and returns the transformed value.\nimport { Pipe, PipeTransform } from \"@angular/core\";\n//We tell Angular that this is a pipe by applying the @Pipe decorator which we import from the core Angular library.\n@Pipe({\n    //The @Pipe decorator takes an object with a name property whose value is the pipe name that we'll use within a template expression. It must be a valid JavaScript identifier. Our pipe's name is orderby.\n    name: \"orderby\"\n})\nexport class OrderByPipe implements PipeTransform {\n    transform(array: Array<any>, args: string): Array<any> {\n        if (typeof args[0] === \"undefined\") {\n            return array;\n        }\n        let direction = args[0][0];\n        let column = args.replace('-','');\n        array.sort((a: any, b: any) => {\n            let left = Number(new Date(a[column]));\n            let right = Number(new Date(b[column]));\n            return (direction === \"-\") ? right - left : left - right;\n        });\n        return array;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"sourceRoot":"webpack:///"}