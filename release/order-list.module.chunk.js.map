{"version":3,"sources":["/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","/home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"names":[],"mappings":";;;;;AAAA,ygCAAygC,iBAAiB,qEAAqE,eAAe,sUAAsU,oDAAoD,8lBAA8lB,sBAAsB,gNAAgN,iBAAiB,gGAAgG,mCAAmC,+FAA+F,kBAAkB,yNAAyN,eAAe,gPAAgP,WAAW,0LAA0L,wVAAwV,6BAA6B,4HAA4H,eAAe,iKAAiK,cAAc,0TAA0T,cAAc,sPAAsP,YAAY,qgGAAqgG,uCAAuC,gvDAAgvD,44B;;;;;;;ACAnuS;AACA;;;AAGA;AACA,0CAA2C,oBAAoB,cAAc,gBAAgB,EAAE,2BAA2B,qBAAqB,qBAAqB,gCAAgC,EAAE,gCAAgC,uCAAuC,uCAAuC,gBAAgB,EAAE,iBAAiB,qBAAqB,uBAAuB,gBAAgB,qBAAqB,EAAE,4BAA4B,oCAAoC,EAAE,4CAA4C,2CAA2C,EAAE;;AAErkB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXmF;AAGb;AACT;AAChC;AAO7B;IAYI,4BAAmB,gBAAkC,EAAS,SAAoB,EAAU,OAAwB;QAAjG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,YAAO,GAAP,OAAO,CAAiB;QAX3G,WAAM,GAAe,EAAE,CAAC;QAI1B,kBAAa,GAAY,IAAI,CAAC;QAC9B,aAAQ,GAAe,EAAE,CAAC;QAC1B,wBAAmB,GAAe,EAAE,CAAC;QACrC,kBAAa,GAAe,EAAE,CAAC;QAC/B,cAAS,GAAG,CAAC,CAAC;QACd,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAW,EAAE,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,iDAAiD;QACjD,6DAA6D;QAC7D,qDAAqD;QACrD,+CAA+C;QAC/C,qFAAqF;QACrF,eAAe;QACf,qFAAqF;QACrF,QAAQ;QACR,oDAAoD;QACpD,oDAAoD;QACpD,0CAA0C;QAC1C,IAAI;IACR,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAyGC;QAxGG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAI;YACrD,qDAAqD;YACrD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAC9B,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;wCACf,CAAC;oBACN,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,mBAAmB,GAAG,EAAE,CAAC;wBAC7B,IAAI,SAAO,GAAG,EAAE,CAAC;wBACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,IAAI,SAAS,GAAG,EAAE,CAAC;4BACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC5D,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC5D,CAAC;4BACD,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC1F,CAAC;wBACD,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;wBACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC7E,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/B,IAAI,IAAI,GAAG;oCACP,GAAG,EAAE,GAAG,GAAG,CAAC;oCACZ,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;iCACpC;gCACD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gCACzC,KAAK,CAAC;4BACV,CAAC;wBACL,CAAC;gDACQ,CAAC;4BACN,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gCACzC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC5H,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;oCAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;oCACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;oCACnD,IAAI,GAAC,GAAG,CAAC,CAAC;oCACV,IAAI,GAAC,GAAG,EAAE,CAAC;oCACP,EAAE,GAAG,WAAW,CAAC;wCACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wCACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;4CACf,aAAa,CAAC,EAAE,CAAC,CAAC;wCACtB,CAAC;wCACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;4CACV,GAAC,GAAG,CAAC,CAAC;4CACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gDACT,GAAC,GAAG,CAAC,CAAC;gDACN,GAAC,GAAG,CAAC,CAAC;4CACV,CAAC;4CAAC,IAAI,CAAC,CAAC;gDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,GAAC,GAAG,EAAE,CAAC;4CACX,CAAC;wCACL,CAAC;wCACD,IAAI,OAAO,GAAG,GAAC,CAAC;wCAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CAC3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;wCACvH,CAAC;oCACL,CAAC,EAAE,YAAY,CAAC,CAAC;gCACrB,CAAC;gCACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC/L,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;oCAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;oCACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;oCACnD,IAAI,GAAC,GAAG,CAAC,CAAC;oCACV,IAAI,GAAC,GAAG,EAAE,CAAC;oCACP,EAAE,GAAG,WAAW,CAAC;wCACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wCACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;4CACf,aAAa,CAAC,EAAE,CAAC,CAAC;wCACtB,CAAC;wCACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;4CACV,GAAC,GAAG,CAAC,CAAC;4CACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gDACT,GAAC,GAAG,CAAC,CAAC;gDACN,GAAC,GAAG,CAAC,CAAC;4CACV,CAAC;4CAAC,IAAI,CAAC,CAAC;gDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,GAAC,GAAG,EAAE,CAAC;4CACX,CAAC;wCACL,CAAC;wCACD,IAAI,OAAO,GAAG,GAAC,CAAC;wCAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CAC3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;wCACvH,CAAC;oCACL,CAAC,EAAE,YAAY,CAAC,CAAC;gCACrB,CAAC;4BACL,CAAC;wBACL,CAAC;wBA7DD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;oCAA1C,CAAC;yBA6DT;wBACD,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAO,CAAC;oBACrD,CAAC;gBACL,CAAC;oBAxDuB,EAAE,EA6BF,EAAE;gBA7D1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;4BAAlC,CAAC;iBAwFT;YACL,CAAC;YACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;aACG,KAAK,CAAC,eAAK;QACZ,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAED,yCAAY,GAAZ,UAAa,YAAY;QACrB,MAAM,CAAC,YAAY,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAA,CAAC;IAEK,2CAAc,GAArB,UAAsB,MAAM;QACxB,IAAI,GAAG,GAAG,aAAa,CAAC;QACxB,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACF,GAAG,GAAG,WAAW,CAAC;gBAAC,KAAK,CAAC;YAC7B,KAAK,CAAC;gBACF,GAAG,GAAG,WAAW,CAAC;gBAAC,KAAK,CAAC;YAC7B,KAAK,CAAC;gBACF,GAAG,GAAG,UAAU,CAAC;gBAAC,KAAK,CAAC;YAC5B,KAAK,CAAC;gBACF,GAAG,GAAG,WAAW,CAAC;gBAAC,KAAK,CAAC;YAC7B,KAAK,CAAC;gBACF,GAAG,GAAG,aAAa,CAAC;gBAAC,KAAK,CAAC;YAC/B,KAAK,CAAC;gBACF,GAAG,GAAG,WAAW,CAAC;gBAAC,KAAK,CAAC;YAC7B;gBACI,KAAK,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAAA,CAAC;IAEK,uCAAU,GAAjB,UAAkB,IAAI,EAAE,KAAK;QAA7B,iBAuGC;QAtGG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,IAAI,GAAG;YACP,EAAE,EAAE,GAAG;SACV,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,cAAI;YACpD,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YAClB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;wCACZ,CAAC;oBACN,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;wBAC7B,IAAI,mBAAmB,GAAG,EAAE,CAAC;wBAC7B,IAAI,SAAO,GAAG,EAAE,CAAC;wBACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,IAAI,SAAS,GAAG,EAAE,CAAC;4BACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC5D,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC5D,CAAC;4BACD,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC1F,CAAC;wBACD,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;wBACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC7E,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/B,IAAI,IAAI,GAAG;oCACP,GAAG,EAAE,GAAG,GAAG,CAAC;oCACZ,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;iCACpC;gCACD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gCACzC,KAAK,CAAC;4BACV,CAAC;wBACL,CAAC;gDACQ,CAAC;4BACN,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gCACzC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC5H,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;oCAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;oCACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;oCACnD,IAAI,GAAC,GAAG,CAAC,CAAC;oCACV,IAAI,GAAC,GAAG,EAAE,CAAC;oCACP,EAAE,GAAG,WAAW,CAAC;wCACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wCACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;4CACf,aAAa,CAAC,EAAE,CAAC,CAAC;wCACtB,CAAC;wCACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;4CACV,GAAC,GAAG,CAAC,CAAC;4CACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gDACT,GAAC,GAAG,CAAC,CAAC;gDACN,GAAC,GAAG,CAAC,CAAC;4CACV,CAAC;4CAAC,IAAI,CAAC,CAAC;gDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,GAAC,GAAG,EAAE,CAAC;4CACX,CAAC;wCACL,CAAC;wCACD,IAAI,OAAO,GAAG,GAAC,CAAC;wCAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CAC3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;wCACvH,CAAC;oCACL,CAAC,EAAE,YAAY,CAAC,CAAC;gCACrB,CAAC;gCACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC/L,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;oCAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;oCACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;oCACnD,IAAI,GAAC,GAAG,CAAC,CAAC;oCACV,IAAI,GAAC,GAAG,EAAE,CAAC;oCACP,EAAE,GAAG,WAAW,CAAC;wCACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wCACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wCACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;4CACf,aAAa,CAAC,EAAE,CAAC,CAAC;wCACtB,CAAC;wCACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;4CACV,GAAC,GAAG,CAAC,CAAC;4CACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gDACT,GAAC,GAAG,CAAC,CAAC;gDACN,GAAC,GAAG,CAAC,CAAC;4CACV,CAAC;4CAAC,IAAI,CAAC,CAAC;gDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,GAAC,GAAG,EAAE,CAAC;4CACX,CAAC;wCACL,CAAC;wCACD,IAAI,OAAO,GAAG,GAAC,CAAC;wCAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4CAE3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;wCACvH,CAAC;oCACL,CAAC,EAAE,YAAY,CAAC,CAAC;gCACrB,CAAC;4BACL,CAAC;wBACL,CAAC;wBA9DD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;oCAA1C,CAAC;yBA8DT;wBACD,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAO,CAAC;oBACrD,CAAC;gBACL,CAAC;oBAzDuB,EAAE,EA6BF,EAAE;gBA7D1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;4BAAlC,CAAC;iBAyFT;YACL,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,CAAC;IAEK,2CAAc,GAArB,UAAsB,IAAI,EAAE,KAAK;QAAjC,iBAyHC;QAxHG,IAAI,MAAM,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;QAChD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC;YACD,IAAI,IAAI,GAAG;gBACP,EAAE,EAAE,GAAG;gBACP,GAAG,EAAE,WAAW;aACnB,CAAC;YACF,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACzD,KAAK,GAAG,iDAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAI;oBACrD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gDACZ,CAAC;4BACN,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gCAClC,IAAI,mBAAmB,GAAG,EAAE,CAAC;gCAC7B,IAAI,SAAO,GAAG,EAAE,CAAC;gCACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAClD,IAAI,SAAS,GAAG,EAAE,CAAC;oCACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wCAC5D,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oCAC5D,CAAC;oCACD,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;gCAC1F,CAAC;gCACD,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;gCACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAClD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wCAC7E,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wCACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC/B,IAAI,IAAI,GAAG;4CACP,GAAG,EAAE,GAAG,GAAG,CAAC;4CACZ,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;yCACpC;wCACD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;wCACzC,KAAK,CAAC;oCACV,CAAC;gCACL,CAAC;gCACD,IAAI,OAAO,GAAG,EAAE,CAAC;wDACR,CAAC;oCACN,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oCACzC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;wCACzC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4CAC5H,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;4CAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;4CACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;4CACnD,IAAI,GAAC,GAAG,CAAC,CAAC;4CACV,IAAI,GAAC,GAAG,EAAE,CAAC;4CACP,EAAE,GAAG,WAAW,CAAC;gDACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;oDACf,aAAa,CAAC,EAAE,CAAC,CAAC;gDACtB,CAAC;gDACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oDACV,GAAC,GAAG,CAAC,CAAC;oDACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wDACT,GAAC,GAAG,CAAC,CAAC;wDACN,GAAC,GAAG,CAAC,CAAC;oDACV,CAAC;oDAAC,IAAI,CAAC,CAAC;wDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wDACV,GAAC,GAAG,EAAE,CAAC;oDACX,CAAC;gDACL,CAAC;gDACD,IAAI,OAAO,GAAG,GAAC,CAAC;gDAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oDAE3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gDACvH,CAAC;4CACL,CAAC,EAAE,YAAY,CAAC,CAAC;wCACrB,CAAC;wCACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4CAC/L,IAAI,SAAO,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,EAAE,CAAC;4CAC1D,IAAI,YAAY,GAAG,IAAI,CAAC;4CACxB,IAAI,GAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC;4CACnD,IAAI,GAAC,GAAG,CAAC,CAAC;4CACV,IAAI,GAAC,GAAG,EAAE,CAAC;4CACP,EAAE,GAAG,WAAW,CAAC;gDACjB,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;gDACV,SAAO,GAAG,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACxC,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gDACtB,EAAE,CAAC,CAAC,SAAO,IAAI,CAAC,CAAC,CAAC,CAAC;oDACf,aAAa,CAAC,EAAE,CAAC,CAAC;gDACtB,CAAC;gDACD,EAAE,CAAC,CAAC,GAAC,IAAI,EAAE,CAAC,CAAC,CAAC;oDACV,GAAC,GAAG,CAAC,CAAC;oDACN,EAAE,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wDACT,GAAC,GAAG,CAAC,CAAC;wDACN,GAAC,GAAG,CAAC,CAAC;oDACV,CAAC;oDAAC,IAAI,CAAC,CAAC;wDACJ,GAAC,GAAG,GAAC,GAAG,CAAC,CAAC;wDACV,GAAC,GAAG,EAAE,CAAC;oDACX,CAAC;gDACL,CAAC;gDACD,IAAI,OAAO,GAAG,GAAC,CAAC;gDAChB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oDAE3C,SAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gDACvH,CAAC;4CACL,CAAC,EAAE,YAAY,CAAC,CAAC;wCACrB,CAAC;oCACL,CAAC;gCACL,CAAC;gCAhED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;4CAA1C,CAAC;iCAgET;gCACD,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,iDAAW,CAAC,SAAO,CAAC,CAAC;;4BAElE,CAAC;wBACL,CAAC;4BA3DuB,EAAE,EA8BF,EAAE;wBAhE1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;kDAAlC,CAAC;;;yBA6FT;oBACL,CAAC;oBACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC/B,CAAC,CAAC;qBACG,KAAK,CAAC,eAAK;gBACZ,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACd,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAAA,CAAC;IACF,6CAAgB,GAAhB,UAAiB,YAAY;QACzB,MAAM,CAAC,YAAY,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAA,CAAC;IACF,wCAAW,GAAX,UAAY,IAAI,EAAE,GAAG,EAAE,OAAO;QAC1B,IAAI,IAAI,GAAG;YACP,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;SACb;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAED,mDAAsB,GAAtB,UAAuB,UAAU,EAAE,KAAK,EAAE,IAAI;QAA9C,iBA+CC;QA9CG,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YACtB,IAAI,IAAI,GAAG;gBACP,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,CAAC;aACZ,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YACtB,IAAI,IAAI,GAAG;gBACP,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,CAAC;aACZ,CAAC;QACN,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACpE,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YAClB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,mBAAmB,GAAG,EAAE,CAAC;wBAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,IAAI,SAAS,GAAG,EAAE,CAAC;4BACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC5D,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC5D,CAAC;4BACD,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC1F,CAAC;wBACD,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;wBACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC7E,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/B,IAAI,IAAI,GAAG;oCACP,GAAG,EAAE,GAAG,GAAG,CAAC;oCACZ,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;iCACpC;gCACD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gCACzC,KAAK,CAAC;4BACV,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAM,GAAN,UAAO,YAAY;QACf,MAAM,CAAC,YAAY,IAAI,CAAC,CAAC;IAC7B,CAAC;IAAA,CAAC;IACF,sCAAS,GAAT;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;wBACrB,WAAW;wBACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;gCAC1D,IAAI,GAAG,GAAG,EAAE,CAAC;gCACb,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;oCACpC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC;gCAC3C,CAAC;gCACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAClD,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC;wCACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4CAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gDAC3D,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;4CACtD,CAAC;wCACL,CAAC;oCACL,CAAC;gCACL,CAAC;gCACD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;oCACtB,EAAE,CAAC,CAAC,CAAC,CAAC,4CAAM,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wCAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC7B,CAAC;gCACL,CAAC;gCACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;oCAC3B,EAAE,EAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC;wCACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC7B,CAAC;oCACD,EAAE,CAAC,CAAC,4CAAM,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wCAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC7B,CAAC;gCACL,CAAC;gCACD,IAAI,mBAAmB,GAAG,EAAE,CAAC;gCAC7B,IAAI,OAAO,GAAG,EAAE,CAAC;gCACjB,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC;oCACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wCAClD,IAAI,SAAS,GAAG,EAAE,CAAC;wCACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4CAC5D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wCAC5D,CAAC;wCACD,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oCAC1F,CAAC;oCACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;oCACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wCAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4CAC7E,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4CACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;4CAC/B,IAAI,IAAI,GAAG;gDACP,GAAG,EAAE,GAAG,GAAG,CAAC;gDACZ,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;6CACpC;4CACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;4CACzC,KAAK,CAAC;wCACV,CAAC;oCACL,CAAC;gCACL,CAAC;gCACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,EAAE,CAAC;4BACvC,CAAC;wBACD,CAAC;wBACL,8BAA8B;wBAC9B,qDAAqD;wBACrD,qEAAqE;wBACrE,4CAA4C;wBAC5C,gCAAgC;wBAChC,qEAAqE;wBACrE,sCAAsC;wBACtC,mFAAmF;wBACnF,+EAA+E;wBAC/E,oBAAoB;wBACpB,yGAAyG;wBACzG,gBAAgB;wBAChB,kFAAkF;wBAClF,qEAAqE;wBACrE,oGAAoG;wBACpG,8EAA8E;wBAC9E,sDAAsD;wBACtD,mCAAmC;wBACnC,wCAAwC;wBACxC,6DAA6D;wBAC7D,wBAAwB;wBACxB,gEAAgE;wBAChE,6BAA6B;wBAC7B,oBAAoB;wBACpB,gBAAgB;wBAChB,qEAAqE;wBACrE,gEAAgE;wBAChE,uJAAuJ;wBACvJ,qFAAqF;wBACrF,mDAAmD;wBACnD,8EAA8E;wBAC9E,qCAAqC;wBACrC,sCAAsC;wBACtC,uDAAuD;wBACvD,yCAAyC;wBACzC,uEAAuE;wBACvE,qDAAqD;wBACrD,kDAAkD;wBAClD,qDAAqD;wBACrD,gCAAgC;wBAChC,6CAA6C;wBAC7C,yCAAyC;wBACzC,gDAAgD;wBAChD,6CAA6C;wBAC7C,6CAA6C;wBAC7C,2CAA2C;wBAC3C,iDAAiD;wBACjD,8CAA8C;wBAC9C,oCAAoC;wBACpC,gCAAgC;wBAChC,+CAA+C;wBAC/C,8EAA8E;wBAE9E,sJAAsJ;wBACtJ,gCAAgC;wBAChC,4CAA4C;wBAC5C,wBAAwB;wBACxB,0NAA0N;wBAC1N,qFAAqF;wBACrF,mDAAmD;wBACnD,8EAA8E;wBAC9E,qCAAqC;wBACrC,sCAAsC;wBACtC,uDAAuD;wBACvD,yCAAyC;wBACzC,uEAAuE;wBACvE,qDAAqD;wBACrD,kDAAkD;wBAClD,qDAAqD;wBACrD,gCAAgC;wBAChC,6CAA6C;wBAC7C,yCAAyC;wBACzC,gDAAgD;wBAChD,6CAA6C;wBAC7C,6CAA6C;wBAC7C,2CAA2C;wBAC3C,iDAAiD;wBACjD,8CAA8C;wBAC9C,oCAAoC;wBACpC,gCAAgC;wBAChC,+CAA+C;wBAC/C,8EAA8E;wBAE9E,sJAAsJ;wBACtJ,gCAAgC;wBAChC,4CAA4C;wBAC5C,wBAAwB;wBACxB,oBAAoB;wBACpB,gBAAgB;wBAChB,gEAAgE;wBAChE,kDAAkD;wBAClD,qBAAqB;wBACrB,YAAY;wBACZ,QAAQ;wBACR,IAAI;oBACJ,CAAC;gBACL,CAAC;YACL,CAAC;YACD,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9C,CAAC;IACL,CAAC;IAEM,sCAAS,GAAhB,UAAiB,GAAG;QAApB,iBAqCC;QApCG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,cAAI;YACrD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;gBAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjB,IAAI,mBAAmB,GAAG,EAAE,CAAC;wBAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,IAAI,SAAS,GAAG,EAAE,CAAC;4BACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC5D,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;4BAC5D,CAAC;4BACD,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC1F,CAAC;wBACD,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC;wBACnE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAClD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC7E,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gCACvD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC/B,IAAI,IAAI,GAAG;oCACP,GAAG,EAAE,GAAG,GAAG,CAAC;oCACZ,IAAI,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;iCACpC;gCACD,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gCACzC,KAAK,CAAC;4BACV,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;YACD,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;aACG,KAAK,CAAC,eAAK;QACZ,CAAC,CAAC,CAAC;IACX,CAAC;IA9oBQ;QAAR,oEAAK,EAAE;;sDAAyB;IADxB,kBAAkB;QAN9B,wEAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,+GAA0C;YAC1C,+GAA0C;SAC7C,CAAC;6DAcuC,oFAAgB,oBAAhB,oFAAgB,sDAAoB,2EAAS,oBAAT,2EAAS,sDAAmB,sEAAe,oBAAf,sEAAe;OAZ3G,kBAAkB,CAgpB/B;IAAA;;CAAA;AAhpB+B;;;;;;;;;;;;;;;;;;;;;;;;ACZ2B;AACX;AACa;AACL;AACC;AACc;AAC1B;AAa5C;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,4EAAgB;aACjB;YACD,YAAY,EAAE,CAAC,iFAAkB,EAAE,6DAAW,CAAC;YAC/C,OAAO,EAAE,CAAE,uEAAgB,CAAE;YAC7B,SAAS,EAAE;gBACT,oFAAgB;gBAChB,6EAAgB;aACjB;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;AClB2B;AACK;AAE5D,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iFAAkB,EAAE;CAC9C,CAAC;AAGK,IAAM,gBAAgB,GAAwB,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACTxC;AACI;AAG/C;IAEE,0BAAoB,IAAU;QAA9B,iBAUC;QAVmB,SAAI,GAAJ,IAAI,CAAM;QAD9B,cAAS,GAAG,EAAE,CAAC;QAEb,IAAI,GAAG,GAAG,wBAAwB,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE;aAC3B,IAAI,CAAC,cAAI;YACR,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEM,sCAAW,GAAlB,UAAmB,GAAa;QAC9B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,EAAE,EAAC,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC,EAAC;YACzB,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YACtC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YACvC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAC;YAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;QAC7B,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,mBAAmB,CAAC,CAAC,CAAC;gBAC/C,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;gBACtC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBACvC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACjC,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAC;gBAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YACrC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEO,6CAAkB,GAA1B,UAA2B,KAAqB;QAC9C,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAEO,iCAAM,GAAd;QACE,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,QAAQ,CAAC,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IAC7B,CAAC;IA7DU,gBAAgB;QAD5B,yEAAU,EAAE;6DAGe,2DAAI,oBAAJ,2DAAI;OAFnB,gBAAgB,CA8D5B;IAAD,uBAAC;;CAAA;AA9D4B;;;;;;;;;;;;;;;;;ACJ7B,6KAA6K;AACzH;AACpD,oHAAoH;AAKpH;IAAA;IAcA,CAAC;IAbG,+BAAS,GAAT,UAAU,KAAiB,EAAE,IAAY;QACrC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;QAClC,KAAK,CAAC,IAAI,CAAC,UAAC,CAAM,EAAE,CAAM;YACtB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAbQ,WAAW;QAJvB,mEAAI,CAAC;YACF,0MAA0M;YAC1M,IAAI,EAAE,SAAS;SAClB,CAAC;OACW,WAAW,CAcvB;IAAD,kBAAC;CAAA;AAduB","file":"order-list.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"tabs-container\\\">\\n    <ul>\\n        <li [class.active]=\\\"activetab == 1\\\" (click)=\\\"changeTab(1)\\\">\\n            All\\n        </li>\\n        <li [class.active]=\\\"activetab == 2\\\" (click)=\\\"changeTab(2)\\\">\\n            To Call\\n        </li>\\n        <li [class.active]=\\\"activetab == 3\\\" (click)=\\\"changeTab(3)\\\">\\n            Delivered\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"text-center\\\" *ngIf=\\\"!(orders && orders.length)\\\">No Order Found.</div>\\n<div *ngIf=\\\"orders && orders.length\\\" class=\\\"order-list-container container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"order-card\\\" *ngFor=\\\"let order of orders\\\">\\n            <div class=\\\"card order-list\\\">\\n                <div class=\\\"card-body\\\" *ngIf=\\\"order\\\" [class.opacity]=\\\"order.status == 3\\\">\\n                    <h4 class=\\\"card-title\\\" *ngIf=\\\"stepdata[order._id]\\\">\\n                        <div>\\n                            <img src=\\\"assets/images/table.png\\\" alt=\\\"\\\">\\n                            <span>{{order.tableName}} /\\n                                <span class=\\\"order-number\\\">N.{{order.orderId}}</span>\\n                            </span>\\n                        </div>\\n                        <!-- <div class=\\\"status bg-red\\\" *ngIf=\\\"remainingTime[order._id] && stepdata[order._id] && remainingTime[order._id][stepdata[order._id].step] != '00:00' && step.preparationTime\\\">\\n                            New Order X{{remainingTime[order._id][stepdata[order._id].step]}}\\n                        </div> -->\\n                        <div *ngFor=\\\"let step of order.step\\\">\\n                            <div class=\\\"status bg-red\\\" *ngIf=\\\"remainingTime[order._id] && stepdata[order._id] && step.step == stepdata[order._id].step && remainingTime[order._id][stepdata[order._id].step] && remainingTime[order._id][stepdata[order._id].step] != '00:00'\\\">\\n                                New Order\\n                            </div>\\n                            <!-- <span class=\\\"status bg-red\\\" *ngIf=\\\"stepdata[order._id] && step.step == stepdata[order._id].step\\\">New Order X{{step.preparationTime}}</span> -->\\n                        </div>\\n                    </h4>\\n                    <div class=\\\"card-text\\\">\\n                        <p>\\n                            <i class=\\\"fas fa-cube\\\"></i> {{order.room.name}}</p>\\n                        <p>\\n                            <i class=\\\"far fa-clock\\\"></i> {{order.created_at | date:'hh:mm a'}}</p>\\n                        <p>\\n                            <i class=\\\"far fa-user\\\"></i> {{order.noOfPeople}}</p>\\n                    </div>\\n                    <div class=\\\"step-listing\\\">\\n                        <ul *ngIf=\\\"order && stepdata[order._id]\\\">\\n                            <li *ngFor=\\\"let step of order.step; let i = index;\\\" (click)=\\\"selectedTab(step.step,i,order._id)\\\" [class.active]=\\\"step.step == stepdata[order._id].step\\\"\\n                                [class.completed]=\\\"itemStatusDelivered[order._id] && itemStatusDelivered[order._id][step.step]\\\">{{step.step}}</li>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"order-items-container\\\">\\n                        <div *ngFor=\\\"let step of order.step; let i= index\\\">\\n                            <div *ngFor=\\\"let item of step.itemId\\\">\\n                                <div class=\\\"order-item\\\" *ngIf=\\\"order&& stepdata[order._id] && item.step == stepdata[order._id].step\\\" [class.text-line]=\\\"item.status == 1\\\">\\n                                    <!-- <label class=\\\"label item-status\\\">{{getOrderStatus(item.status)}}</label> -->\\n                                    <div class=\\\"order-item-img\\\">\\n                                        {{item.quantity}} X\\n                                    </div>\\n                                    <div class=\\\"order-item-detail\\\">\\n                                        {{item.id.name}}\\n                                        <ul>\\n                                            <li *ngFor=\\\"let varient of item.variant\\\">\\n                                                <i *ngIf=\\\"varient.status == 1\\\">+</i>\\n                                                <i *ngIf=\\\"varient.status == 0\\\">-</i> {{varient.name}}\\n                                            </li>\\n                                        </ul>\\n                                        <ul>\\n                                            <li>\\n                                                {{item.notes}}\\n                                            </li>\\n                                        </ul>\\n                                    </div>\\n                                    <div class=\\\"order-quantity d-flex w-45\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" *ngIf=\\\"(step.step == 'Uscita 1')\\\" (click)=\\\"updateItem(item, order._id, 2)\\\">\\n                                            <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\n                                        </button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" *ngIf=\\\"(step.step != 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step] && stepdata[order._id] && (order.stepStatus == step.step)\\\"\\n                                            (click)=\\\"updateItem(item, order._id, 2)\\\">\\n                                            <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"order-call-btn\\\" *ngIf=\\\"order && order.step.length\\\">\\n                    <div *ngFor=\\\"let step of order.step\\\">\\n                        <div *ngIf=\\\"stepdata[order._id].step == step.step\\\">\\n                            <div class=\\\"department-checkbtn-container\\\">\\n                                <span *ngFor=\\\"let department of step.department\\\">\\n                                    <span class=\\\"department-checkbtn\\\" *ngIf=\\\"(step.step == 'Uscita 1') && (authGuard.getCurrentUser()._id == department.id._id) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\n                                        [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" (click)=\\\"updateDepartmentStatus(department,order,step.step)\\\">\\n                                        <i class=\\\"fas fa-check-circle\\\"></i>\\n                                    </span>\\n                                    <span class=\\\"department-checkbtn\\\" *ngIf=\\\"(step.step != 'Uscita 1') && stepdata[order._id] && (order.stepStatus == step.step) && (authGuard.getCurrentUserId() == department.id._id) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\n                                        [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" (click)=\\\"updateDepartmentStatus(department,order,step.step)\\\">\\n                                        <i class=\\\"fas fa-check-circle\\\"></i>\\n                                    </span>\\n                                    <span class=\\\"department-name\\\" [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" *ngIf=\\\"authGuard.getCurrentUser()._id != department.id._id\\\">{{getFirstChar(department.id.firstName)}}</span>\\n                                </span>\\n                            </div>\\n                            <button type=\\\"submit\\\" *ngIf=\\\"stepdata[order._id] && (step.step == 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\n                                (click)=\\\"updateStepItem(step, order)\\\">Delivered</button>\\n                            <button type=\\\"submit\\\" *ngIf=\\\"(step.step != 'Uscita 1') && stepdata[order._id] && (order.stepStatus == step.step) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\n                                (click)=\\\"updateStepItem(step, order)\\\">Delivered</button>\\n                            <button class=\\\"bg-yellow\\\" *ngIf=\\\"(step.step != 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step] && stepdata[order._id] && (order.stepStatus != step.step)\\\"\\n                                type=\\\"submit\\\" [disabled]=\\\"true\\\">To Call</button>\\n                        </div>\\n\\n                        <!-- Modal -->\\n\\n                        <div class=\\\"modal fade modal-sm\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n                            <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                                <div class=\\\"modal-content\\\">\\n                                    <div class=\\\"modal-header\\\">\\n                                        <h4 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Confirm Deliver</h4>\\n                                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                                            <span aria-hidden=\\\"true\\\">&times;</span>\\n                                        </button>\\n                                    </div>\\n                                    <div class=\\\"modal-body\\\">\\n\\n                                    </div>\\n                                    <div class=\\\"modal-footer\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateStepItem(step, order)\\\">Confirm</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- *ngIf=\\\"websocketService.getCurrentUser() == '1'\\\" -->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.html\n// module chunks = order-list.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tabs-container {\\n  position: fixed;\\n  top: 50px;\\n  width: 100%; }\\n\\n.order-list-container {\\n  margin-top: 50px;\\n  overflow-y: auto;\\n  height: calc(100vh - 103px); }\\n  .order-list-container .row {\\n    -ms-flex-wrap: nowrap !important;\\n        flex-wrap: nowrap !important;\\n    margin: 0; }\\n\\n.order-card {\\n  max-width: 327px;\\n  margin-right: 10px;\\n  width: 100%;\\n  min-width: 320px; }\\n  .order-card .card-body {\\n    padding-bottom: 0  !important; }\\n    .order-card .card-body .step-listing {\\n      background-color: #fff  !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.scss\n// module chunks = order-list.module","import { Component, OnInit, IterableDiffers, Input, DoCheck } from '@angular/core';\nimport { OrderByPipe } from '../../orderby';\nimport { OrderListService } from './order-list.service';\nimport { WebsocketService } from '../../../service/websocket.service';\nimport { AuthGuard } from '../../../shared/guard/auth.guard';\nimport *  as _ from 'lodash';\n@Component({\n    selector: 'app-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss']\n})\n\nexport class OrderListComponent implements DoCheck {\n    @Input() orders: Array<any> = [];\n    differ: any;\n    public clock: any;\n    public tick: any;\n    public loadingOrders: boolean = true;\n    public stepdata: Array<any> = [];\n    public itemStatusDelivered: Array<any> = [];\n    public remainingTime: Array<any> = [];\n    public activetab = 1;\n    public changedTab: boolean = false;\n    public audioPlay: string = '';\n    constructor(public websocketService: WebsocketService, public authGuard: AuthGuard, private differs: IterableDiffers) {\n        this.differ = differs.find([]).create(null);\n        // if (this.websocketService.getAudio() == '1') {\n        //     var x = (document.createElement('audio').canPlayType);\n        //     var myAudio = document.createElement('audio');\n        //     if (myAudio.canPlayType(\"audio/mpeg\")) {\n        //         myAudio.setAttribute(\"src\", \"../../../assets/audio/notication_sound.mp3\");\n        //     } else {\n        //         myAudio.setAttribute(\"src\", \"../../../assets/audio/notication_sound.ogg\");\n        //     }\n        //     myAudio.setAttribute(\"controls\", \"controls\");\n        //     myAudio.setAttribute(\"autoplay\", \"autoplay\");\n        //     document.body.appendChild(myAudio);\n        // }\n    }\n\n    ngOnInit() {\n        this.activetab = 1;\n        this.websocketService.getOrders(this.activetab).then(data => {\n            // this.audioPlay = localStorage.getItem('autoplay');\n            this.orders = data;\n            if (this.orders.length) {\n                this.itemStatusDelivered = [];\n                this.remainingTime = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    if (this.orders[i]) {\n                        let itemStatusDelivered = {};\n                        let remTime = {};\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\n                            let startTemp = [];\n                            for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\n                                startTemp.push(this.orders[i].step[k].itemId[l].status);\n                            }\n                            itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\n                        }\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                                let temparray = this.orders[i].step[m].step.split(' ');\n                                let num = Number(temparray[1]);\n                                let temp = {\n                                    tab: num - 1,\n                                    step: this.orders[i].step[m].step,\n                                }\n                                this.stepdata[this.orders[i]._id] = temp;\n                                break;\n                            }\n                        }\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\n                            if (this.orders[i].step[k].preparationTime) {\n                                if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\n                                    let timeInterval = 1000;\n                                    let m = this.orders[i].step[k].preparationTime - 1;\n                                    let t = 0;\n                                    let s = 60;\n                                    var id = setInterval(() => {\n                                        t = t + 1;\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\n                                        s = s > 0 ? s - 1 : 0;\n                                        if (seconds == 0) {\n                                            clearInterval(id);\n                                        }\n                                        if (t == 60) {\n                                            t = 0;\n                                            if (m == 0) {\n                                                m = 0;\n                                                s = 0;\n                                            } else {\n                                                m = m - 1;\n                                                s = 60;\n                                            }\n                                        }\n                                        var minutes = m;\n                                        if (this.orders[i] && this.orders[i].step[k]) {\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                        }\n                                    }, timeInterval);\n                                }\n                                else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\n                                    let timeInterval = 1000;\n                                    let m = this.orders[i].step[k].preparationTime - 1;\n                                    let t = 0;\n                                    let s = 60;\n                                    var id = setInterval(() => {\n                                        t = t + 1;\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\n                                        s = s > 0 ? s - 1 : 0;\n                                        if (seconds == 0) {\n                                            clearInterval(id);\n                                        }\n                                        if (t == 60) {\n                                            t = 0;\n                                            if (m == 0) {\n                                                m = 0;\n                                                s = 0;\n                                            } else {\n                                                m = m - 1;\n                                                s = 60;\n                                            }\n                                        }\n                                        var minutes = m;\n                                        if (this.orders[i] && this.orders[i].step[k]) {\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                        }\n                                    }, timeInterval);\n                                }\n                            }\n                        }\n                        this.remainingTime[this.orders[i]._id] = remTime;\n                    }\n                }\n            }\n            this.loadingOrders = false;\n        })\n            .catch(error => {\n            });\n        this.tick = setInterval(() => {\n            this.clock = Date.now();\n        }, 1000);\n    }\n\n    isEqualToOne(currentValue) {\n        return currentValue == 1;\n    };\n\n    public getOrderStatus(status) {\n        var str = 'In progress';\n        switch (status) {\n            case 0:\n                str = 'New order'; break;\n            case 1:\n                str = 'Delivered'; break;\n            case 2:\n                str = 'Prepared'; break;\n            case 3:\n                str = 'Cancelled'; break;\n            case 4:\n                str = 'In progress'; break;\n            case 5:\n                str = 'Completed'; break;\n            default:\n                break;\n        }\n        return str;\n    };\n\n    public updateItem(item, order) {\n        item.status = 1;\n        let ids = [];\n        ids.push(item._id);\n        let opts = {\n            id: ids\n        };\n        this.websocketService.updateOrder(order, opts).then(data => {\n            order = data.data;\n            if (this.orders.length) {\n                for (let i = 0; i < this.orders.length; i++) {\n                    if (this.orders[i].id == order) {\n                        let itemStatusDelivered = {};\n                        let remTime = {};\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            let startTemp = [];\n                            for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\n                                startTemp.push(this.orders[i].step[m].itemId[n].status);\n                            }\n                            itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\n                        }\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                                let temparray = this.orders[i].step[m].step.split(' ');\n                                let num = Number(temparray[1]);\n                                let temp = {\n                                    tab: num - 1,\n                                    step: this.orders[i].step[m].step,\n                                }\n                                this.stepdata[this.orders[i]._id] = temp;\n                                break;\n                            }\n                        }\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\n                            if (this.orders[i].step[k].preparationTime) {\n                                if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\n                                    let timeInterval = 1000;\n                                    let m = this.orders[i].step[k].preparationTime - 1;\n                                    let t = 0;\n                                    let s = 60;\n                                    var id = setInterval(() => {\n                                        t = t + 1;\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\n                                        s = s > 0 ? s - 1 : 0;\n                                        if (seconds == 0) {\n                                            clearInterval(id);\n                                        }\n                                        if (t == 60) {\n                                            t = 0;\n                                            if (m == 0) {\n                                                m = 0;\n                                                s = 0;\n                                            } else {\n                                                m = m - 1;\n                                                s = 60;\n                                            }\n                                        }\n                                        var minutes = m;\n                                        if (this.orders[i] && this.orders[i].step[k]) {\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                        }\n                                    }, timeInterval);\n                                }\n                                else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\n                                    let timeInterval = 1000;\n                                    let m = this.orders[i].step[k].preparationTime - 1;\n                                    let t = 0;\n                                    let s = 60;\n                                    var id = setInterval(() => {\n                                        t = t + 1;\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\n                                        s = s > 0 ? s - 1 : 0;\n                                        if (seconds == 0) {\n                                            clearInterval(id);\n                                        }\n                                        if (t == 60) {\n                                            t = 0;\n                                            if (m == 0) {\n                                                m = 0;\n                                                s = 0;\n                                            } else {\n                                                m = m - 1;\n                                                s = 60;\n                                            }\n                                        }\n                                        var minutes = m;\n                                        if (this.orders[i] && this.orders[i].step[k]) {\n\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                        }\n                                    }, timeInterval);\n                                }\n                            }\n                        }\n                        this.remainingTime[this.orders[i]._id] = remTime;\n                    }\n                }\n            }\n        }).catch(error => {\n        });\n    };\n\n    public updateStepItem(step, order) {\n        var result = confirm(\"Do you want to deliver?\");\n        if (result) {\n            let ids = [];\n            for (let i = 0; i < step.itemId.length; i++) {\n                step.itemId[i].status = 1;\n                if (ids.indexOf(step.itemId[i]._id) < 0) {\n                    ids.push(step.itemId[i]._id);\n                }\n            }\n            let opts = {\n                id: ids,\n                key: 'delivered'\n            };\n            this.websocketService.updateOrder(order._id, opts).then((data) => {\n                order = _.cloneDeep(data.data);\n                this.websocketService.getOrders(this.activetab).then(data => {\n                    this.orders = data;\n                    if (this.orders.length) {\n                        for (let i = 0; i < this.orders.length; i++) {\n                            if (this.orders[i]._id == order._id) {\n                                let itemStatusDelivered = {};\n                                let remTime = {};\n                                for (let k = 0; k < this.orders[i].step.length; k++) {\n                                    let startTemp = [];\n                                    for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\n                                        startTemp.push(this.orders[i].step[k].itemId[l].status);\n                                    }\n                                    itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\n                                }\n                                this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                                for (let m = 0; m < this.orders[i].step.length; m++) {\n                                    if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                                        let temparray = this.orders[i].step[m].step.split(' ');\n                                        let num = Number(temparray[1]);\n                                        let temp = {\n                                            tab: num - 1,\n                                            step: this.orders[i].step[m].step,\n                                        }\n                                        this.stepdata[this.orders[i]._id] = temp;\n                                        break;\n                                    }\n                                }\n                                let stepIds = [];\n                                for (let k = 0; k < this.orders[i].step.length; k++) {\n                                    stepIds.push(this.orders[i].step[k]._id);\n                                    if (this.orders[i].step[k].preparationTime) {\n                                        if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\n                                            let timeInterval = 1000;\n                                            let m = this.orders[i].step[k].preparationTime - 1;\n                                            let t = 0;\n                                            let s = 60;\n                                            var id = setInterval(() => {\n                                                t = t + 1;\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\n                                                s = s > 0 ? s - 1 : 0;\n                                                if (seconds == 0) {\n                                                    clearInterval(id);\n                                                }\n                                                if (t == 60) {\n                                                    t = 0;\n                                                    if (m == 0) {\n                                                        m = 0;\n                                                        s = 0;\n                                                    } else {\n                                                        m = m - 1;\n                                                        s = 60;\n                                                    }\n                                                }\n                                                var minutes = m;\n                                                if (this.orders[i] && this.orders[i].step[k]) {\n\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                                }\n                                            }, timeInterval);\n                                        }\n                                        else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\n                                            let timeInterval = 1000;\n                                            let m = this.orders[i].step[k].preparationTime - 1;\n                                            let t = 0;\n                                            let s = 60;\n                                            var id = setInterval(() => {\n                                                t = t + 1;\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\n                                                s = s > 0 ? s - 1 : 0;\n                                                if (seconds == 0) {\n                                                    clearInterval(id);\n                                                }\n                                                if (t == 60) {\n                                                    t = 0;\n                                                    if (m == 0) {\n                                                        m = 0;\n                                                        s = 0;\n                                                    } else {\n                                                        m = m - 1;\n                                                        s = 60;\n                                                    }\n                                                }\n                                                var minutes = m;\n                                                if (this.orders[i] && this.orders[i].step[k]) {\n\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                                                }\n                                            }, timeInterval);\n                                        }\n                                    }\n                                }\n                                this.remainingTime[this.orders[i]._id] = _.cloneDeep(remTime);\n                                break;\n                            }\n                        }\n                    }\n                    this.loadingOrders = false;\n                })\n                    .catch(error => {\n                    });\n            }).catch(error => {\n            });\n        }\n    };\n    isBelowThreshold(currentValue) {\n        return currentValue == 1;\n    };\n    selectedTab(step, tab, orderId) {\n        let temp = {\n            tab: tab,\n            step: step\n        }\n        this.stepdata[orderId] = temp;\n    }\n\n    getFirstChar(text) {\n        return text.charAt();\n    }\n\n    updateDepartmentStatus(department, order, step) {\n        if (department.status == 0) {\n            department.status = 1;\n            var opts = {\n                step: step,\n                status: 1\n            };\n        }\n        else {\n            department.status = 0;\n            var opts = {\n                step: step,\n                status: 0\n            };\n        }\n        this.websocketService.updateDepartmentStatus(order._id, opts).then((data) => {\n            order = data.data;\n            if (this.orders.length) {\n                this.itemStatusDelivered = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    if (this.orders[i]) {\n                        let itemStatusDelivered = {};\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            let startTemp = [];\n                            for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\n                                startTemp.push(this.orders[i].step[m].itemId[n].status);\n                            }\n                            itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\n                        }\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                                let temparray = this.orders[i].step[m].step.split(' ');\n                                let num = Number(temparray[1]);\n                                let temp = {\n                                    tab: num - 1,\n                                    step: this.orders[i].step[m].step,\n                                }\n                                this.stepdata[this.orders[i]._id] = temp;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }).catch(error => {\n        });\n    }\n\n    isZero(currentValue) {\n        return currentValue == 0;\n    };\n    ngDoCheck() {\n        if (this.websocketService.socketEvent) {\n            if (this.orders.length) {\n                const change = this.differ.diff(this.orders);\n                if (change != null) {\n                    if (this.orders.length) {\n                        // new code\n                        for (let j = this.orders.length - 1; j >= 0; j--) {                                     \n                            if (this.orders[j]._id == this.websocketService.orderId) {                            \n                            let arr = [];\n                            if (this.orders[j].stepStatus == null) {\n                                this.orders[j].stepStatus = 'Uscita 1';\n                            }\n                            for (let k = 0; k < this.orders[j].step.length; k++) {\n                                if(this.orders[j].step[k].itemId.length){\n                                    for (let l = 0; l < this.orders[j].step[k].itemId.length; l++) {\n                                        if (this.orders[j].stepStatus == this.orders[j].step[k].step) {\n                                            arr.push(this.orders[j].step[k].itemId[l].status);\n                                        }\n                                    }\n                                }\n                            }\n                            if (this.activetab == 2) {\n                                if (!(_.uniq(arr).length === 1 && arr[0] === 1)) {\n                                    this.orders.splice(j, 1);\n                                }\n                            }\n                            else if (this.activetab == 3) {\n                                if(!arr.length){\n                                    this.orders.splice(j, 1);\n                                }\n                                if (_.uniq(arr).length === 1 && arr[0] === 1) {\n                                    this.orders.splice(j, 1);\n                                }\n                            }\n                            let itemStatusDelivered = {};\n                            let remTime = {};\n                            if(this.orders[j]){\n                                for (let m = 0; m < this.orders[j].step.length; m++) {\n                                    let startTemp = [];\n                                    for (let n = 0; n < this.orders[j].step[m].itemId.length; n++) {\n                                        startTemp.push(this.orders[j].step[m].itemId[n].status);\n                                    }\n                                    itemStatusDelivered[this.orders[j].step[m].step] = startTemp.every(this.isEqualToOne);\n                                }\n                                this.itemStatusDelivered[this.orders[j]._id] = itemStatusDelivered;\n                                for (let m = 0; m < this.orders[j].step.length; m++) {\n                                    if (!this.itemStatusDelivered[this.orders[j]._id][this.orders[j].step[m].step]) {\n                                        let temparray = this.orders[j].step[m].step.split(' ');\n                                        let num = Number(temparray[1]);\n                                        let temp = {\n                                            tab: num - 1,\n                                            step: this.orders[j].step[m].step,\n                                        }\n                                        this.stepdata[this.orders[j]._id] = temp;\n                                        break;\n                                    }\n                                }\n                            }                           \n                            this.websocketService.orderId = '';\n                        }\n                        }\n                    //     if(this.orders.length){\n                    //     for (let i = 0; i < this.orders.length; i++) {\n                    //         if (this.orders[i]._id == this.websocketService.orderId) {\n                    //             let itemStatusDelivered = {};\n                    //             let remTime = {};\n                    //             for (let m = 0; m < this.orders[i].step.length; m++) {\n                    //                 let startTemp = [];\n                    //                 for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\n                    //                     startTemp.push(this.orders[i].step[m].itemId[n].status);\n                    //                 }\n                    //                 itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\n                    //             }\n                    //             this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                    //             for (let m = 0; m < this.orders[i].step.length; m++) {\n                    //                 if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                    //                     let temparray = this.orders[i].step[m].step.split(' ');\n                    //                     let num = Number(temparray[1]);\n                    //                     let temp = {\n                    //                         tab: num - 1,\n                    //                         step: this.orders[i].step[m].step,\n                    //                     }\n                    //                     this.stepdata[this.orders[i]._id] = temp;\n                    //                     break;\n                    //                 }\n                    //             }\n                    //             for (let k = 0; k < this.orders[i].step.length; k++) {\n                    //                 if (this.orders[i].step[k].preparationTime) {\n                    //                     if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                    //                         let seconds = this.orders[i].step[k].preparationTime * 60;\n                    //                         let timeInterval = 1000;\n                    //                         let m = this.orders[i].step[k].preparationTime - 1;\n                    //                         let t = 0;\n                    //                         let s = 60;\n                    //                         var id = setInterval(() => {\n                    //                             t = t + 1;\n                    //                             seconds = seconds > 0 ? seconds - 1 : 0;\n                    //                             s = s > 0 ? s - 1 : 0;\n                    //                             if (seconds == 0) {\n                    //                                 clearInterval(id);\n                    //                             }\n                    //                             if (t == 60) {\n                    //                                 t = 0;\n                    //                                 if (m == 0) {\n                    //                                     m = 0;\n                    //                                     s = 0;\n                    //                                 } else {\n                    //                                     m = m - 1;\n                    //                                     s = 60;\n                    //                                 }\n                    //                             }\n                    //                             var minutes = m;\n                    //                             if (this.orders[i] && this.orders[i].step[k]) {\n\n                    //                                 remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                    //                             }\n                    //                         }, timeInterval);\n                    //                     }\n                    //                     else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\n                    //                         let seconds = this.orders[i].step[k].preparationTime * 60;\n                    //                         let timeInterval = 1000;\n                    //                         let m = this.orders[i].step[k].preparationTime - 1;\n                    //                         let t = 0;\n                    //                         let s = 60;\n                    //                         var id = setInterval(() => {\n                    //                             t = t + 1;\n                    //                             seconds = seconds > 0 ? seconds - 1 : 0;\n                    //                             s = s > 0 ? s - 1 : 0;\n                    //                             if (seconds == 0) {\n                    //                                 clearInterval(id);\n                    //                             }\n                    //                             if (t == 60) {\n                    //                                 t = 0;\n                    //                                 if (m == 0) {\n                    //                                     m = 0;\n                    //                                     s = 0;\n                    //                                 } else {\n                    //                                     m = m - 1;\n                    //                                     s = 60;\n                    //                                 }\n                    //                             }\n                    //                             var minutes = m;\n                    //                             if (this.orders[i] && this.orders[i].step[k]) {\n\n                    //                                 remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\n                    //                             }\n                    //                         }, timeInterval);\n                    //                     }\n                    //                 }\n                    //             }\n                    //             this.remainingTime[this.orders[i]._id] = remTime;\n                    //             this.websocketService.orderId = '';\n                    //             break;\n                    //         }\n                    //     }\n                    // }\n                    }\n                }\n            }\n            this.websocketService.socketEvent = false;\n        }\n    }\n\n    public changeTab(tab) {\n        this.changedTab = true;\n        this.activetab = tab;\n        this.websocketService.getOrders(this.activetab).then(data => {\n            this.orders = data;\n            if (this.orders.length) {\n                this.itemStatusDelivered = [];\n                for (let i = 0; i < this.orders.length; i++) {\n                    if (this.orders[i]) {\n                        let itemStatusDelivered = {};\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\n                            let startTemp = [];\n                            for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\n                                startTemp.push(this.orders[i].step[k].itemId[l].status);\n                            }\n                            itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\n                        }\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\n                                let temparray = this.orders[i].step[m].step.split(' ');\n                                let num = Number(temparray[1]);\n                                let temp = {\n                                    tab: num - 1,\n                                    step: this.orders[i].step[m].step,\n                                }\n                                this.stepdata[this.orders[i]._id] = temp;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            this.loadingOrders = false;\n        })\n            .catch(error => {\n            });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","import { NgModule,NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrderListComponent } from './order-list.component';\nimport { OrderListRouting } from './order-list.routes';\nimport { OrderListService } from './order-list.service';\nimport { WebsocketService } from '../../../service/websocket.service';\nimport { OrderByPipe } from '../../orderby';\n@NgModule({\n  imports: [\n    CommonModule,\n    OrderListRouting\n  ],\n  declarations: [OrderListComponent, OrderByPipe],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [\n    WebsocketService,\n    OrderListService\n  ],\n})\nexport class OrderListModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderListComponent } from './order-list.component';\n\nconst routes: Routes = [\n    { path: '', component: OrderListComponent }\n];\n\n\nexport const OrderListRouting: ModuleWithProviders = RouterModule.forChild(routes); \n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable, Subject } from 'rxjs/Rx';\n@Injectable()\nexport class OrderListService {\n  orderList = [];\n  constructor(private http: Http) { \n    let url = '/api/department/orders';\n    this.http.get(url).toPromise()\n      .then(data => {\n        let res = data.json();\n        this.orderList = res.data;\n      })\n      .catch(error => {\n        this.orderList = [];\n      });\n  }\n\n  setOrder(data) {\n    this.orderList.push(data);\n  }\n\n  public extractData(res: Response) {\n    let body = res.json();\n    if(body.statusCode == 401){\n      localStorage.removeItem('isLoggedin');\n      localStorage.removeItem('currentUser');\n      localStorage.removeItem('token');\n      document.cookie = \"token=\" + '';\n      window.location.href = '/';   \n    }\n    if (body.hasOwnProperty('error')) {\n      if (body.error.message === 'Token is required') {\n        localStorage.removeItem('isLoggedin');\n        localStorage.removeItem('currentUser');\n        localStorage.removeItem('token');\n        document.cookie = \"token=\" + '';\n        window.location.href = '/';\n      } else {\n        return Promise.resolve(body || {});\n      }\n    } else {\n      return Promise.resolve(body || {});\n    }\n  }\n\n  private handleErrorPromise(error: Response | any) {\n    let body = error.json();\n    if (error.status === 401) {\n      this.logout();\n    }\n    else if (error.status === 400 || error.status === 403) {\n      return Promise.reject(body.message || error);\n    }\n    else {\n      return Promise.reject(body.message || error);\n    }\n  }\n\n  private logout() {\n    localStorage.removeItem('isLoggedin');\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    document.cookie = \"token=\" + '';\n    window.location.href = '/';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","//The pipe class implements the PipeTransform interface's transform method that accepts an input value and an optional array of parameters and returns the transformed value.\nimport { Pipe, PipeTransform } from \"@angular/core\";\n//We tell Angular that this is a pipe by applying the @Pipe decorator which we import from the core Angular library.\n@Pipe({\n    //The @Pipe decorator takes an object with a name property whose value is the pipe name that we'll use within a template expression. It must be a valid JavaScript identifier. Our pipe's name is orderby.\n    name: \"orderby\"\n})\nexport class OrderByPipe implements PipeTransform {\n    transform(array: Array<any>, args: string): Array<any> {\n        if (typeof args[0] === \"undefined\") {\n            return array;\n        }\n        let direction = args[0][0];\n        let column = args.replace('-','');\n        array.sort((a: any, b: any) => {\n            let left = Number(new Date(a[column]));\n            let right = Number(new Date(b[column]));\n            return (direction === \"-\") ? right - left : left - right;\n        });\n        return array;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/huulke/Documents/projects/hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"sourceRoot":"webpack:///"}