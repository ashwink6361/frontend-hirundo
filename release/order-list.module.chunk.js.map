{"version":3,"sources":["D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html","D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss","D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","D:/Project/Hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"names":[],"mappings":"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","file":"order-list.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"tabs-container\\\">\\r\\n    <ul>\\r\\n        <li [class.active]=\\\"activetab == 1\\\" (click)=\\\"changeTab(1)\\\">\\r\\n            All\\r\\n        </li>\\r\\n        <li [class.active]=\\\"activetab == 2\\\" (click)=\\\"changeTab(2)\\\">\\r\\n            To Call\\r\\n        </li>\\r\\n        <li [class.active]=\\\"activetab == 3\\\" (click)=\\\"changeTab(3)\\\">\\r\\n            Delivered\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\" *ngIf=\\\"!(orders && orders.length)\\\">No Order Found.</div>\\r\\n<div *ngIf=\\\"orders && orders.length\\\" class=\\\"order-list-container container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"order-card\\\" *ngFor=\\\"let order of orders\\\">\\r\\n            <div class=\\\"card order-list\\\">\\r\\n                <div class=\\\"card-body\\\" [class.opacity]=\\\"order.status == 3\\\">\\r\\n                    <h4 class=\\\"card-title\\\" *ngIf=\\\"stepdata[order._id]\\\">\\r\\n                        <div>\\r\\n                            <img src=\\\"assets/images/table.png\\\" alt=\\\"\\\">\\r\\n                            <span>{{order.tableName}} /\\r\\n                                <span class=\\\"order-number\\\">N.{{order.orderId}}</span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <!-- <div class=\\\"status bg-red\\\" *ngIf=\\\"remainingTime[order._id] && stepdata[order._id] && remainingTime[order._id][stepdata[order._id].step] != '00:00' && step.preparationTime\\\">\\r\\n                            New Order X{{remainingTime[order._id][stepdata[order._id].step]}}\\r\\n                        </div> -->\\r\\n                        <div *ngFor=\\\"let step of order.step\\\">\\r\\n                            <div class=\\\"status bg-red\\\" *ngIf=\\\"remainingTime[order._id] && stepdata[order._id] && step.step == stepdata[order._id].step && remainingTime[order._id][stepdata[order._id].step] && remainingTime[order._id][stepdata[order._id].step] != '00:00'\\\">\\r\\n                                New Order\\r\\n                            </div>\\r\\n                            <!-- <span class=\\\"status bg-red\\\" *ngIf=\\\"stepdata[order._id] && step.step == stepdata[order._id].step\\\">New Order X{{step.preparationTime}}</span> -->\\r\\n                        </div>\\r\\n                    </h4>\\r\\n                    <div class=\\\"card-text\\\">\\r\\n                        <p>\\r\\n                            <i class=\\\"fas fa-cube\\\"></i> {{order.room.name}}</p>\\r\\n                        <p>\\r\\n                            <i class=\\\"far fa-clock\\\"></i> {{order.created_at | date:'hh:mm a'}}</p>\\r\\n                        <p>\\r\\n                            <i class=\\\"far fa-user\\\"></i> {{order.noOfPeople}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"step-listing\\\">\\r\\n                        <ul *ngIf=\\\"stepdata[order._id]\\\">\\r\\n                            <li *ngFor=\\\"let step of order.step; let i = index;\\\" (click)=\\\"selectedTab(step.step,i,order._id)\\\" [class.active]=\\\"step.step == stepdata[order._id].step\\\"\\r\\n                                [class.completed]=\\\"itemStatusDelivered[order._id] && itemStatusDelivered[order._id][step.step]\\\">{{step.step}}</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                    <div class=\\\"order-items-container\\\">\\r\\n                        <div *ngFor=\\\"let step of order.step; let i= index\\\">\\r\\n                            <div *ngFor=\\\"let item of step.itemId\\\">\\r\\n                                <div class=\\\"order-item\\\" *ngIf=\\\"stepdata[order._id] && item.step == stepdata[order._id].step\\\" [class.text-line]=\\\"item.status == 1\\\">\\r\\n                                    <!-- <label class=\\\"label item-status\\\">{{getOrderStatus(item.status)}}</label> -->\\r\\n                                    <div class=\\\"order-item-img\\\">\\r\\n                                        {{item.quantity}} X\\r\\n                                    </div>\\r\\n                                    <div class=\\\"order-item-detail\\\">\\r\\n                                        {{item.id.name}}\\r\\n                                        <ul>\\r\\n                                            <li *ngFor=\\\"let varient of item.variant\\\">\\r\\n                                                <i *ngIf=\\\"varient.status == 1\\\">+</i>\\r\\n                                                <i *ngIf=\\\"varient.status == 0\\\">-</i> {{varient.name}}\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                        <ul>\\r\\n                                            <li>\\r\\n                                                {{item.notes}}\\r\\n                                            </li>\\r\\n                                        </ul>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"order-quantity d-flex w-45\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" *ngIf=\\\"(step.step == 'Uscita 1')\\\" (click)=\\\"updateItem(item, order._id, 2)\\\">\\r\\n                                            <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-floting update-order-btn\\\" *ngIf=\\\"(step.step != 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step] && stepdata[order._id] && (order.stepStatus == step.step)\\\"\\r\\n                                            (click)=\\\"updateItem(item, order._id, 2)\\\">\\r\\n                                            <img src=\\\"assets/images/order-deliver.png\\\" alt=\\\"\\\" />\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"order-call-btn\\\" *ngIf=\\\"order.step.length\\\">\\r\\n                    <div *ngFor=\\\"let step of order.step\\\">\\r\\n                        <div *ngIf=\\\"stepdata[order._id].step == step.step\\\">\\r\\n                            <div class=\\\"department-checkbtn-container\\\">\\r\\n                                <span *ngFor=\\\"let department of step.department\\\">\\r\\n                                    <span class=\\\"department-checkbtn\\\" *ngIf=\\\"(step.step == 'Uscita 1') && (authGuard.getCurrentUser()._id == department.id._id) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\r\\n                                        [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" (click)=\\\"updateDepartmentStatus(department,order,step.step)\\\">\\r\\n                                        <i class=\\\"fas fa-check-circle\\\"></i>\\r\\n                                    </span>\\r\\n                                    <span class=\\\"department-checkbtn\\\" *ngIf=\\\"(step.step != 'Uscita 1') && stepdata[order._id] && (order.stepStatus == step.step) && (authGuard.getCurrentUserId() == department.id._id) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\r\\n                                        [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" (click)=\\\"updateDepartmentStatus(department,order,step.step)\\\">\\r\\n                                        <i class=\\\"fas fa-check-circle\\\"></i>\\r\\n                                    </span>\\r\\n                                    <span class=\\\"department-name\\\" [class.bg-grey]=\\\"department.status == 0\\\" [class.bg-green]=\\\"department.status == 1\\\" *ngIf=\\\"authGuard.getCurrentUser()._id != department.id._id\\\">{{getFirstChar(department.id.firstName)}}</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            <button type=\\\"submit\\\" *ngIf=\\\"stepdata[order._id] && (step.step == 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\r\\n                                (click)=\\\"updateStepItem(step, order)\\\">Delivered</button>\\r\\n                            <button type=\\\"submit\\\" *ngIf=\\\"(step.step != 'Uscita 1') && stepdata[order._id] && (order.stepStatus == step.step) && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step]\\\"\\r\\n                                (click)=\\\"updateStepItem(step, order)\\\">Delivered</button>\\r\\n                            <button class=\\\"bg-yellow\\\" *ngIf=\\\"(step.step != 'Uscita 1') && itemStatusDelivered[order._id] && !itemStatusDelivered[order._id][step.step] && stepdata[order._id] && (order.stepStatus != step.step)\\\"\\r\\n                                type=\\\"submit\\\" [disabled]=\\\"true\\\">To Call</button>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- Modal -->\\r\\n\\r\\n                        <div class=\\\"modal fade modal-sm\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                            <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                                <div class=\\\"modal-content\\\">\\r\\n                                    <div class=\\\"modal-header\\\">\\r\\n                                        <h4 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Confirm Deliver</h4>\\r\\n                                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                                            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"modal-body\\\">\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"modal-footer\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateStepItem(step, order)\\\">Confirm</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- *ngIf=\\\"websocketService.getCurrentUser() == '1'\\\" -->\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.html\n// module chunks = order-list.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tabs-container {\\n  position: fixed;\\n  top: 50px;\\n  width: 100%; }\\n\\n.order-list-container {\\n  margin-top: 50px;\\n  overflow-y: auto;\\n  height: calc(100vh - 103px); }\\n  .order-list-container .row {\\n    -ms-flex-wrap: nowrap !important;\\n        flex-wrap: nowrap !important;\\n    margin: 0; }\\n\\n.order-card {\\n  max-width: 327px;\\n  margin-right: 10px;\\n  width: 100%;\\n  min-width: 320px; }\\n  .order-card .card-body {\\n    padding-bottom: 0  !important; }\\n    .order-card .card-body .step-listing {\\n      background-color: #fff  !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.scss\n// module chunks = order-list.module","import { Component, OnInit, IterableDiffers, Input, DoCheck } from '@angular/core';\r\nimport { OrderByPipe } from '../../orderby';\r\nimport { OrderListService } from './order-list.service';\r\nimport { WebsocketService } from '../../../service/websocket.service';\r\nimport { AuthGuard } from '../../../shared/guard/auth.guard';\r\nimport *  as _ from 'lodash';\r\n@Component({\r\n    selector: 'app-order-list',\r\n    templateUrl: './order-list.component.html',\r\n    styleUrls: ['./order-list.component.scss']\r\n})\r\n\r\nexport class OrderListComponent implements DoCheck {\r\n    @Input() orders: Array<any> = [];\r\n    differ: any;\r\n    public clock: any;\r\n    public tick: any;\r\n    public loadingOrders: boolean = true;\r\n    public stepdata: Array<any> = [];\r\n    public itemStatusDelivered: Array<any> = [];\r\n    public remainingTime: Array<any> = [];\r\n    public activetab = 1;\r\n    public changedTab: boolean = false;\r\n    public audioPlay: string = '';\r\n    constructor(public websocketService: WebsocketService, public authGuard: AuthGuard, private differs: IterableDiffers) {\r\n        this.differ = differs.find([]).create(null);\r\n        // if (this.websocketService.getAudio() == '1') {\r\n        //     var x = (document.createElement('audio').canPlayType);\r\n        //     var myAudio = document.createElement('audio');\r\n        //     if (myAudio.canPlayType(\"audio/mpeg\")) {\r\n        //         myAudio.setAttribute(\"src\", \"../../../assets/audio/notication_sound.mp3\");\r\n        //     } else {\r\n        //         myAudio.setAttribute(\"src\", \"../../../assets/audio/notication_sound.ogg\");\r\n        //     }\r\n        //     myAudio.setAttribute(\"controls\", \"controls\");\r\n        //     myAudio.setAttribute(\"autoplay\", \"autoplay\");\r\n        //     document.body.appendChild(myAudio);\r\n        // }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.activetab = 1;\r\n        this.websocketService.getOrders(this.activetab).then(data => {\r\n            // this.audioPlay = localStorage.getItem('autoplay');\r\n            this.orders = data;\r\n            if (this.orders.length) {\r\n                this.itemStatusDelivered = [];\r\n                this.remainingTime = [];\r\n                for (let i = 0; i < this.orders.length; i++) {\r\n                    if (this.orders[i]) {\r\n                        let itemStatusDelivered = {};\r\n                        let remTime = {};\r\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                            let startTemp = [];\r\n                            for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\r\n                                startTemp.push(this.orders[i].step[k].itemId[l].status);\r\n                            }\r\n                            itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\r\n                        }\r\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                let temparray = this.orders[i].step[m].step.split(' ');\r\n                                let num = Number(temparray[1]);\r\n                                let temp = {\r\n                                    tab: num - 1,\r\n                                    step: this.orders[i].step[m].step,\r\n                                }\r\n                                this.stepdata[this.orders[i]._id] = temp;\r\n                                break;\r\n                            }\r\n                        }\r\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                            if (this.orders[i].step[k].preparationTime) {\r\n                                if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                    let timeInterval = 1000;\r\n                                    let m = this.orders[i].step[k].preparationTime - 1;\r\n                                    let t = 0;\r\n                                    let s = 60;\r\n                                    var id = setInterval(() => {\r\n                                        t = t + 1;\r\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                        s = s > 0 ? s - 1 : 0;\r\n                                        if (seconds == 0) {\r\n                                            clearInterval(id);\r\n                                        }\r\n                                        if (t == 60) {\r\n                                            t = 0;\r\n                                            if (m == 0) {\r\n                                                m = 0;\r\n                                                s = 0;\r\n                                            } else {\r\n                                                m = m - 1;\r\n                                                s = 60;\r\n                                            }\r\n                                        }\r\n                                        var minutes = m;\r\n                                        if (this.orders[i] && this.orders[i].step[k]) {\r\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                        }\r\n                                    }, timeInterval);\r\n                                }\r\n                                else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                    let timeInterval = 1000;\r\n                                    let m = this.orders[i].step[k].preparationTime - 1;\r\n                                    let t = 0;\r\n                                    let s = 60;\r\n                                    var id = setInterval(() => {\r\n                                        t = t + 1;\r\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                        s = s > 0 ? s - 1 : 0;\r\n                                        if (seconds == 0) {\r\n                                            clearInterval(id);\r\n                                        }\r\n                                        if (t == 60) {\r\n                                            t = 0;\r\n                                            if (m == 0) {\r\n                                                m = 0;\r\n                                                s = 0;\r\n                                            } else {\r\n                                                m = m - 1;\r\n                                                s = 60;\r\n                                            }\r\n                                        }\r\n                                        var minutes = m;\r\n                                        if (this.orders[i] && this.orders[i].step[k]) {\r\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                        }\r\n                                    }, timeInterval);\r\n                                }\r\n                            }\r\n                        }\r\n                        this.remainingTime[this.orders[i]._id] = remTime;\r\n                    }\r\n                }\r\n            }\r\n            this.loadingOrders = false;\r\n        })\r\n            .catch(error => {\r\n            });\r\n        this.tick = setInterval(() => {\r\n            this.clock = Date.now();\r\n        }, 1000);\r\n    }\r\n\r\n    isEqualToOne(currentValue) {\r\n        return currentValue == 1;\r\n    };\r\n\r\n    public getOrderStatus(status) {\r\n        var str = 'In progress';\r\n        switch (status) {\r\n            case 0:\r\n                str = 'New order'; break;\r\n            case 1:\r\n                str = 'Delivered'; break;\r\n            case 2:\r\n                str = 'Prepared'; break;\r\n            case 3:\r\n                str = 'Cancelled'; break;\r\n            case 4:\r\n                str = 'In progress'; break;\r\n            case 5:\r\n                str = 'Completed'; break;\r\n            default:\r\n                break;\r\n        }\r\n        return str;\r\n    };\r\n\r\n    public updateItem(item, order) {\r\n        item.status = 1;\r\n        let ids = [];\r\n        ids.push(item._id);\r\n        let opts = {\r\n            id: ids\r\n        };\r\n        this.websocketService.updateOrder(order, opts).then(data => {\r\n            order = data.data;\r\n            if (this.orders.length) {\r\n                for (let i = 0; i < this.orders.length; i++) {\r\n                    if (this.orders[i].id == order) {\r\n                        let itemStatusDelivered = {};\r\n                        let remTime = {};\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            let startTemp = [];\r\n                            for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\r\n                                startTemp.push(this.orders[i].step[m].itemId[n].status);\r\n                            }\r\n                            itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\r\n                        }\r\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                let temparray = this.orders[i].step[m].step.split(' ');\r\n                                let num = Number(temparray[1]);\r\n                                let temp = {\r\n                                    tab: num - 1,\r\n                                    step: this.orders[i].step[m].step,\r\n                                }\r\n                                this.stepdata[this.orders[i]._id] = temp;\r\n                                break;\r\n                            }\r\n                        }\r\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                            if (this.orders[i].step[k].preparationTime) {\r\n                                if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                    let timeInterval = 1000;\r\n                                    let m = this.orders[i].step[k].preparationTime - 1;\r\n                                    let t = 0;\r\n                                    let s = 60;\r\n                                    var id = setInterval(() => {\r\n                                        t = t + 1;\r\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                        s = s > 0 ? s - 1 : 0;\r\n                                        if (seconds == 0) {\r\n                                            clearInterval(id);\r\n                                        }\r\n                                        if (t == 60) {\r\n                                            t = 0;\r\n                                            if (m == 0) {\r\n                                                m = 0;\r\n                                                s = 0;\r\n                                            } else {\r\n                                                m = m - 1;\r\n                                                s = 60;\r\n                                            }\r\n                                        }\r\n                                        var minutes = m;\r\n                                        if (this.orders[i] && this.orders[i].step[k]) {\r\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                        }\r\n                                    }, timeInterval);\r\n                                }\r\n                                else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                    let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                    let timeInterval = 1000;\r\n                                    let m = this.orders[i].step[k].preparationTime - 1;\r\n                                    let t = 0;\r\n                                    let s = 60;\r\n                                    var id = setInterval(() => {\r\n                                        t = t + 1;\r\n                                        seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                        s = s > 0 ? s - 1 : 0;\r\n                                        if (seconds == 0) {\r\n                                            clearInterval(id);\r\n                                        }\r\n                                        if (t == 60) {\r\n                                            t = 0;\r\n                                            if (m == 0) {\r\n                                                m = 0;\r\n                                                s = 0;\r\n                                            } else {\r\n                                                m = m - 1;\r\n                                                s = 60;\r\n                                            }\r\n                                        }\r\n                                        var minutes = m;\r\n                                        if (this.orders[i] && this.orders[i].step[k]) {\r\n\r\n                                            remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                        }\r\n                                    }, timeInterval);\r\n                                }\r\n                            }\r\n                        }\r\n                        this.remainingTime[this.orders[i]._id] = remTime;\r\n                    }\r\n                }\r\n            }\r\n        }).catch(error => {\r\n        });\r\n    };\r\n\r\n    public updateStepItem(step, order) {\r\n        var result = confirm(\"Do you want to deliver?\");\r\n        if (result) {\r\n            let ids = [];\r\n            for (let i = 0; i < step.itemId.length; i++) {\r\n                step.itemId[i].status = 1;\r\n                if (ids.indexOf(step.itemId[i]._id) < 0) {\r\n                    ids.push(step.itemId[i]._id);\r\n                }\r\n            }\r\n            let opts = {\r\n                id: ids,\r\n                key: 'delivered'\r\n            };\r\n            this.websocketService.updateOrder(order._id, opts).then((data) => {\r\n                order = _.cloneDeep(data.data);\r\n                this.websocketService.getOrders(this.activetab).then(data => {\r\n                    this.orders = data;\r\n                    if (this.orders.length) {\r\n                        for (let i = 0; i < this.orders.length; i++) {\r\n                            if (this.orders[i]._id == order._id) {\r\n                                let itemStatusDelivered = {};\r\n                                let remTime = {};\r\n                                for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                                    let startTemp = [];\r\n                                    for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\r\n                                        startTemp.push(this.orders[i].step[k].itemId[l].status);\r\n                                    }\r\n                                    itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\r\n                                }\r\n                                this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                                for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                                    if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                        let temparray = this.orders[i].step[m].step.split(' ');\r\n                                        let num = Number(temparray[1]);\r\n                                        let temp = {\r\n                                            tab: num - 1,\r\n                                            step: this.orders[i].step[m].step,\r\n                                        }\r\n                                        this.stepdata[this.orders[i]._id] = temp;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                let stepIds = [];\r\n                                for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                                    stepIds.push(this.orders[i].step[k]._id);\r\n                                    if (this.orders[i].step[k].preparationTime) {\r\n                                        if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                            let timeInterval = 1000;\r\n                                            let m = this.orders[i].step[k].preparationTime - 1;\r\n                                            let t = 0;\r\n                                            let s = 60;\r\n                                            var id = setInterval(() => {\r\n                                                t = t + 1;\r\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                                s = s > 0 ? s - 1 : 0;\r\n                                                if (seconds == 0) {\r\n                                                    clearInterval(id);\r\n                                                }\r\n                                                if (t == 60) {\r\n                                                    t = 0;\r\n                                                    if (m == 0) {\r\n                                                        m = 0;\r\n                                                        s = 0;\r\n                                                    } else {\r\n                                                        m = m - 1;\r\n                                                        s = 60;\r\n                                                    }\r\n                                                }\r\n                                                var minutes = m;\r\n                                                if (this.orders[i] && this.orders[i].step[k]) {\r\n\r\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                                }\r\n                                            }, timeInterval);\r\n                                        }\r\n                                        else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                            let timeInterval = 1000;\r\n                                            let m = this.orders[i].step[k].preparationTime - 1;\r\n                                            let t = 0;\r\n                                            let s = 60;\r\n                                            var id = setInterval(() => {\r\n                                                t = t + 1;\r\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                                s = s > 0 ? s - 1 : 0;\r\n                                                if (seconds == 0) {\r\n                                                    clearInterval(id);\r\n                                                }\r\n                                                if (t == 60) {\r\n                                                    t = 0;\r\n                                                    if (m == 0) {\r\n                                                        m = 0;\r\n                                                        s = 0;\r\n                                                    } else {\r\n                                                        m = m - 1;\r\n                                                        s = 60;\r\n                                                    }\r\n                                                }\r\n                                                var minutes = m;\r\n                                                if (this.orders[i] && this.orders[i].step[k]) {\r\n\r\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                                }\r\n                                            }, timeInterval);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                this.remainingTime[this.orders[i]._id] = _.cloneDeep(remTime);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    this.loadingOrders = false;\r\n                })\r\n                    .catch(error => {\r\n                    });\r\n            }).catch(error => {\r\n            });\r\n        }\r\n    };\r\n    isBelowThreshold(currentValue) {\r\n        return currentValue == 1;\r\n    };\r\n    selectedTab(step, tab, orderId) {\r\n        let temp = {\r\n            tab: tab,\r\n            step: step\r\n        }\r\n        this.stepdata[orderId] = temp;\r\n    }\r\n\r\n    getFirstChar(text) {\r\n        return text.charAt();\r\n    }\r\n\r\n    updateDepartmentStatus(department, order, step) {\r\n        if (department.status == 0) {\r\n            department.status = 1;\r\n            var opts = {\r\n                step: step,\r\n                status: 1\r\n            };\r\n        }\r\n        else {\r\n            department.status = 0;\r\n            var opts = {\r\n                step: step,\r\n                status: 0\r\n            };\r\n        }\r\n        this.websocketService.updateDepartmentStatus(order._id, opts).then((data) => {\r\n            order = data.data;\r\n            if (this.orders.length) {\r\n                this.itemStatusDelivered = [];\r\n                for (let i = 0; i < this.orders.length; i++) {\r\n                    if (this.orders[i]) {\r\n                        let itemStatusDelivered = {};\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            let startTemp = [];\r\n                            for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\r\n                                startTemp.push(this.orders[i].step[m].itemId[n].status);\r\n                            }\r\n                            itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\r\n                        }\r\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                let temparray = this.orders[i].step[m].step.split(' ');\r\n                                let num = Number(temparray[1]);\r\n                                let temp = {\r\n                                    tab: num - 1,\r\n                                    step: this.orders[i].step[m].step,\r\n                                }\r\n                                this.stepdata[this.orders[i]._id] = temp;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }).catch(error => {\r\n        });\r\n    }\r\n\r\n    ngDoCheck() {\r\n        if (this.websocketService.socketEvent) {\r\n            if (this.orders && this.orders.length) {\r\n                const change = this.differ.diff(this.orders);\r\n                if (change != null) {\r\n                    if (this.orders.length) {\r\n                        // new code\r\n                        for (let j = this.orders.length - 1; j >= 0; j--) {\r\n                            let arr = [];\r\n                            if (this.orders[j].stepStatus == null) {\r\n                                this.orders[j].stepStatus = 'Uscita 1';\r\n                            }\r\n                            for (let k = 0; k < this.orders[j].item.length; k++) {\r\n                                if (this.orders[j].stepStatus == this.orders[j].item[k].step) {\r\n                                    arr.push(this.orders[j].item[k].status);\r\n                                }\r\n                            }\r\n                            if (this.activetab == 2) {\r\n                                if (!(_.uniq(arr).length === 1 && arr[0] === 1)) {\r\n                                    this.orders.splice(this.orders[j], 1);\r\n                                }\r\n                            }\r\n                            else if (this.activetab == 3) {\r\n                                if (_.uniq(arr).length === 1 && arr[0] === 1) {\r\n                                    this.orders.splice(this.orders[j], 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        if(this.orders.length){\r\n                        for (let i = 0; i < this.orders.length; i++) {\r\n                            if (this.orders[i]._id == this.websocketService.orderId) {\r\n                                let itemStatusDelivered = {};\r\n                                let remTime = {};\r\n                                for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                                    let startTemp = [];\r\n                                    for (let n = 0; n < this.orders[i].step[m].itemId.length; n++) {\r\n                                        startTemp.push(this.orders[i].step[m].itemId[n].status);\r\n                                    }\r\n                                    itemStatusDelivered[this.orders[i].step[m].step] = startTemp.every(this.isEqualToOne);\r\n                                }\r\n                                this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                                for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                                    if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                        let temparray = this.orders[i].step[m].step.split(' ');\r\n                                        let num = Number(temparray[1]);\r\n                                        let temp = {\r\n                                            tab: num - 1,\r\n                                            step: this.orders[i].step[m].step,\r\n                                        }\r\n                                        this.stepdata[this.orders[i]._id] = temp;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                                    if (this.orders[i].step[k].preparationTime) {\r\n                                        if ((this.orders[i].step[k].step == 'Uscita 1') && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                            let timeInterval = 1000;\r\n                                            let m = this.orders[i].step[k].preparationTime - 1;\r\n                                            let t = 0;\r\n                                            let s = 60;\r\n                                            var id = setInterval(() => {\r\n                                                t = t + 1;\r\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                                s = s > 0 ? s - 1 : 0;\r\n                                                if (seconds == 0) {\r\n                                                    clearInterval(id);\r\n                                                }\r\n                                                if (t == 60) {\r\n                                                    t = 0;\r\n                                                    if (m == 0) {\r\n                                                        m = 0;\r\n                                                        s = 0;\r\n                                                    } else {\r\n                                                        m = m - 1;\r\n                                                        s = 60;\r\n                                                    }\r\n                                                }\r\n                                                var minutes = m;\r\n                                                if (this.orders[i] && this.orders[i].step[k]) {\r\n\r\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                                }\r\n                                            }, timeInterval);\r\n                                        }\r\n                                        else if ((this.orders[i].step[k].step != 'Uscita 1') && (this.orders[i].stepStatus == this.orders[i].step[k].step) && !this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[k].step]) {\r\n                                            let seconds = this.orders[i].step[k].preparationTime * 60;\r\n                                            let timeInterval = 1000;\r\n                                            let m = this.orders[i].step[k].preparationTime - 1;\r\n                                            let t = 0;\r\n                                            let s = 60;\r\n                                            var id = setInterval(() => {\r\n                                                t = t + 1;\r\n                                                seconds = seconds > 0 ? seconds - 1 : 0;\r\n                                                s = s > 0 ? s - 1 : 0;\r\n                                                if (seconds == 0) {\r\n                                                    clearInterval(id);\r\n                                                }\r\n                                                if (t == 60) {\r\n                                                    t = 0;\r\n                                                    if (m == 0) {\r\n                                                        m = 0;\r\n                                                        s = 0;\r\n                                                    } else {\r\n                                                        m = m - 1;\r\n                                                        s = 60;\r\n                                                    }\r\n                                                }\r\n                                                var minutes = m;\r\n                                                if (this.orders[i] && this.orders[i].step[k]) {\r\n\r\n                                                    remTime[this.orders[i].step[k].step] = (minutes < 10 ? ('0' + minutes) : minutes) + \":\" + (s < 10 ? ('0' + s) : s);\r\n                                                }\r\n                                            }, timeInterval);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                this.remainingTime[this.orders[i]._id] = remTime;\r\n                                this.websocketService.orderId = '';\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n            }\r\n            this.websocketService.socketEvent = false;\r\n        }\r\n    }\r\n\r\n    public changeTab(tab) {\r\n        this.changedTab = true;\r\n        this.activetab = tab;\r\n        this.websocketService.getOrders(this.activetab).then(data => {\r\n            this.orders = data;\r\n            if (this.orders.length) {\r\n                this.itemStatusDelivered = [];\r\n                for (let i = 0; i < this.orders.length; i++) {\r\n                    if (this.orders[i]) {\r\n                        let itemStatusDelivered = {};\r\n                        for (let k = 0; k < this.orders[i].step.length; k++) {\r\n                            let startTemp = [];\r\n                            for (let l = 0; l < this.orders[i].step[k].itemId.length; l++) {\r\n                                startTemp.push(this.orders[i].step[k].itemId[l].status);\r\n                            }\r\n                            itemStatusDelivered[this.orders[i].step[k].step] = startTemp.every(this.isEqualToOne);\r\n                        }\r\n                        this.itemStatusDelivered[this.orders[i]._id] = itemStatusDelivered;\r\n                        for (let m = 0; m < this.orders[i].step.length; m++) {\r\n                            if (!this.itemStatusDelivered[this.orders[i]._id][this.orders[i].step[m].step]) {\r\n                                let temparray = this.orders[i].step[m].step.split(' ');\r\n                                let num = Number(temparray[1]);\r\n                                let temp = {\r\n                                    tab: num - 1,\r\n                                    step: this.orders[i].step[m].step,\r\n                                }\r\n                                this.stepdata[this.orders[i]._id] = temp;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.loadingOrders = false;\r\n        })\r\n            .catch(error => {\r\n            });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","import { NgModule,NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrderListComponent } from './order-list.component';\r\nimport { OrderListRouting } from './order-list.routes';\r\nimport { OrderListService } from './order-list.service';\r\nimport { WebsocketService } from '../../../service/websocket.service';\r\nimport { OrderByPipe } from '../../orderby';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OrderListRouting\r\n  ],\r\n  declarations: [OrderListComponent, OrderByPipe],\r\n  schemas: [ NO_ERRORS_SCHEMA ],\r\n  providers: [\r\n    WebsocketService,\r\n    OrderListService\r\n  ],\r\n})\r\nexport class OrderListModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderListComponent } from './order-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: OrderListComponent }\r\n];\r\n\r\n\r\nexport const OrderListRouting: ModuleWithProviders = RouterModule.forChild(routes); \r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\n@Injectable()\r\nexport class OrderListService {\r\n  orderList = [];\r\n  constructor(private http: Http) { \r\n    let url = '/api/department/orders';\r\n    this.http.get(url).toPromise()\r\n      .then(data => {\r\n        let res = data.json();\r\n        this.orderList = res.data;\r\n      })\r\n      .catch(error => {\r\n        this.orderList = [];\r\n      });\r\n  }\r\n\r\n  setOrder(data) {\r\n    this.orderList.push(data);\r\n  }\r\n\r\n  public extractData(res: Response) {\r\n    let body = res.json();\r\n    if(body.statusCode == 401){\r\n      localStorage.removeItem('isLoggedin');\r\n      localStorage.removeItem('currentUser');\r\n      localStorage.removeItem('token');\r\n      document.cookie = \"token=\" + '';\r\n      window.location.href = '/';   \r\n    }\r\n    if (body.hasOwnProperty('error')) {\r\n      if (body.error.message === 'Token is required') {\r\n        localStorage.removeItem('isLoggedin');\r\n        localStorage.removeItem('currentUser');\r\n        localStorage.removeItem('token');\r\n        document.cookie = \"token=\" + '';\r\n        window.location.href = '/';\r\n      } else {\r\n        return Promise.resolve(body || {});\r\n      }\r\n    } else {\r\n      return Promise.resolve(body || {});\r\n    }\r\n  }\r\n\r\n  private handleErrorPromise(error: Response | any) {\r\n    let body = error.json();\r\n    if (error.status === 401) {\r\n      this.logout();\r\n    }\r\n    else if (error.status === 400 || error.status === 403) {\r\n      return Promise.reject(body.message || error);\r\n    }\r\n    else {\r\n      return Promise.reject(body.message || error);\r\n    }\r\n  }\r\n\r\n  private logout() {\r\n    localStorage.removeItem('isLoggedin');\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('token');\r\n    document.cookie = \"token=\" + '';\r\n    window.location.href = '/';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","//The pipe class implements the PipeTransform interface's transform method that accepts an input value and an optional array of parameters and returns the transformed value.\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n//We tell Angular that this is a pipe by applying the @Pipe decorator which we import from the core Angular library.\r\n@Pipe({\r\n    //The @Pipe decorator takes an object with a name property whose value is the pipe name that we'll use within a template expression. It must be a valid JavaScript identifier. Our pipe's name is orderby.\r\n    name: \"orderby\"\r\n})\r\nexport class OrderByPipe implements PipeTransform {\r\n    transform(array: Array<any>, args: string): Array<any> {\r\n        if (typeof args[0] === \"undefined\") {\r\n            return array;\r\n        }\r\n        let direction = args[0][0];\r\n        let column = args.replace('-','');\r\n        array.sort((a: any, b: any) => {\r\n            let left = Number(new Date(a[column]));\r\n            let right = Number(new Date(b[column]));\r\n            return (direction === \"-\") ? right - left : left - right;\r\n        });\r\n        return array;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Project/Hirundo/web-hirundo/src/app/hirundo/orderby.ts"],"sourceRoot":"webpack:///"}