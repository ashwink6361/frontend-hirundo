{"version":3,"sources":["D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/orderby.ts"],"names":[],"mappings":"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","file":"order-list.module.chunk.js","sourcesContent":["module.exports = \"<div>\\r\\n    <div class=\\\"text-center\\\" *ngIf=\\\"loadingOrders\\\">Loading...</div>\\r\\n    <div *ngIf=\\\"!loadingOrders\\\" class=\\\"order-list-container\\\">\\r\\n        <div class=\\\"card order-list\\\" *ngFor=\\\"let order of orders | orderby: '-created_at'\\\">\\r\\n            <div *ngFor=\\\"let item of order.item\\\">\\r\\n                <div class=\\\"card-body\\\" [class.opacity]=\\\"order.status == 3\\\" *ngIf=\\\"item.category == authGuard.getCurrentUser().category\\\">\\r\\n                    <h4 class=\\\"card-title\\\">\\r\\n                        <div>\\r\\n                            <i class=\\\"far fa-clock\\\"></i> {{order.created_at | date:'hh:mm a'}}</div>\\r\\n                        <div class=\\\"status\\\" [class.bg-red]=\\\"order.status == 0\\\" [class.bg-green]=\\\"order.status == 2\\\" [class.bg-yellow]=\\\"order.status == 4\\\">{{getOrderStatus(order.status)}}</div>\\r\\n                    </h4>\\r\\n                    <div class=\\\"card-text\\\">\\r\\n                        <p>\\r\\n                            <i class=\\\"fas fa-cube\\\"></i> {{order.room.name}}</p>\\r\\n                        <p>\\r\\n                            <img src=\\\"assets/images/table.png\\\" alt=\\\"\\\">\\r\\n                            <span>{{order.tableName}}</span>\\r\\n                        </p>\\r\\n                        <p>\\r\\n                            <i class=\\\"far fa-user\\\"></i> {{order.noOfPeople}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"order-items-container\\\">\\r\\n                        <div class=\\\"order-item\\\">\\r\\n                            <div class=\\\"order-item-detail\\\">\\r\\n                                {{item.id.name}}\\r\\n                                <ul>\\r\\n                                    <li *ngFor=\\\"let varient of item.id.variant\\\">\\r\\n                                        {{varient.name}}\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                            <div class=\\\"order-quantity\\\">\\r\\n                                x {{item.quantity}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-container d-flex justify-content-between\\\">\\r\\n                        <button class=\\\"btn btn-primary waves-light\\\" mdbRippleRadius (click)=\\\"updateOrder(order, 3)\\\">Cancel</button>\\r\\n                        <button class=\\\"btn btn-primary waves-light\\\" mdbRippleRadius (click)=\\\"updateOrder(order, 4)\\\">In Progress</button>\\r\\n                        <button class=\\\"btn btn-primary waves-light\\\" mdbRippleRadius (click)=\\\"updateOrder(order, 2)\\\">Done</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.html\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.html\n// module chunks = order-list.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.scss\n// module id = ../../../../../src/app/hirundo/department/order-list/order-list.component.scss\n// module chunks = order-list.module","import { Component, OnInit } from '@angular/core';\r\nimport { OrderByPipe } from '../../orderby';\r\nimport { OrderListService } from './order-list.service';\r\nimport { WebsocketService } from '../../../service/websocket.service';\r\nimport { AuthGuard } from '../../../shared/guard/auth.guard';\r\n\r\n@Component({\r\n    selector: 'app-order-list',\r\n    templateUrl: './order-list.component.html',\r\n    styleUrls: ['./order-list.component.scss']\r\n})\r\n\r\nexport class OrderListComponent implements OnInit {\r\n    public orders: Array<any> = [];\r\n    public clock: any;\r\n    public tick: any;\r\n    public loadingOrders: boolean = true;\r\n    constructor(public websocketService: WebsocketService, public authGuard: AuthGuard) {\r\n        //websocketService.connect();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.websocketService.getOrders().then(data => {\r\n            this.orders = data;\r\n            this.loadingOrders = false;            \r\n          })\r\n            .catch(error => {\r\n              console.log('error', error);\r\n            });\r\n\r\n        // setTimeout(()=>{\r\n        //     this.orders = this.websocketService.getOrders();\r\n        //     this.loadingOrders = false;\r\n        //     //console.log('this.orders ', this.orders);\r\n        // }, 5000);\r\n\r\n        this.tick = setInterval(() => {\r\n            this.clock = Date.now();\r\n        }, 1000);\r\n    }\r\n\r\n    public getOrderStatus(status) {\r\n        var str = 'In progress';\r\n        switch (status) {\r\n            case 0:\r\n                str = 'New order'; break;\r\n            case 1:\r\n                str = 'Delivered'; break;\r\n            case 2:\r\n                str = 'Prepared'; break;\r\n            case 3:\r\n                str = 'Cancelled'; break;\r\n            case 4:\r\n                str = 'In progress'; break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n    public updateOrder(order, status) {\r\n        order.status = status;\r\n        this.websocketService.updateOrder(order._id, { status: status }).then(data => {\r\n            console.log(\"Order updated\", data);\r\n        }).catch(error => {\r\n            console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrderListComponent } from './order-list.component';\r\nimport { OrderListRouting } from './order-list.routes';\r\nimport { OrderListService } from './order-list.service';\r\nimport { WebsocketService } from '../../../service/websocket.service';\r\nimport { OrderByPipe } from '../../orderby';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OrderListRouting\r\n  ],\r\n  declarations: [OrderListComponent, OrderByPipe],\r\n  providers: [\r\n    WebsocketService,\r\n    OrderListService\r\n  ],\r\n})\r\nexport class OrderListModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.module.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderListComponent } from './order-list.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: OrderListComponent }\r\n];\r\n\r\n\r\nexport const OrderListRouting: ModuleWithProviders = RouterModule.forChild(routes); \r\n\n\n\n// WEBPACK FOOTER //\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.routes.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\n@Injectable()\r\nexport class OrderListService {\r\n  orderList = [];\r\n  constructor(private http: Http) { \r\n    let url = '/api/department/orders';\r\n    this.http.get(url).toPromise()\r\n      .then(data => {\r\n        let res = data.json();\r\n        this.orderList = res.data;\r\n      })\r\n      .catch(error => {\r\n        this.orderList = [];\r\n      });\r\n  }\r\n\r\n  setOrder(data) {\r\n    this.orderList.push(data);\r\n  }\r\n\r\n  public extractData(res: Response) {\r\n    let body = res.json();\r\n    if (body.hasOwnProperty('error')) {\r\n      if (body.error.message === 'Token is required') {\r\n        this.logout();\r\n      } else {\r\n        return Promise.resolve(body || {});\r\n      }\r\n    } else {\r\n      return Promise.resolve(body || {});\r\n    }\r\n  }\r\n\r\n  private handleErrorPromise(error: Response | any) {\r\n    let body = error.json();\r\n    if (error.status === 400 || error.status === 401) {\r\n      return Promise.reject(body.message || error);\r\n    }\r\n    else {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  private logout() {\r\n    localStorage.removeItem('isLoggedin');\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('token');\r\n    document.cookie = \"token=\" + '';\r\n    window.location.href = '/';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/department/order-list/order-list.service.ts","//The pipe class implements the PipeTransform interface's transform method that accepts an input value and an optional array of parameters and returns the transformed value.\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n//We tell Angular that this is a pipe by applying the @Pipe decorator which we import from the core Angular library.\r\n@Pipe({\r\n    //The @Pipe decorator takes an object with a name property whose value is the pipe name that we'll use within a template expression. It must be a valid JavaScript identifier. Our pipe's name is orderby.\r\n    name: \"orderby\"\r\n})\r\nexport class OrderByPipe implements PipeTransform {\r\n    transform(array: Array<any>, args: string): Array<any> {\r\n        if (typeof args[0] === \"undefined\") {\r\n            return array;\r\n        }\r\n        let direction = args[0][0];\r\n        let column = args.replace('-','');\r\n        array.sort((a: any, b: any) => {\r\n            let left = Number(new Date(a[column]));\r\n            let right = Number(new Date(b[column]));\r\n            return (direction === \"-\") ? right - left : left - right;\r\n        });\r\n        return array;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/project/htdocs/Hirundo-new/web-hirundo/src/app/hirundo/orderby.ts"],"sourceRoot":"webpack:///"}